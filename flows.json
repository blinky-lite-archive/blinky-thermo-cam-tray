[
    {
        "id": "3f2da72f.995ab8",
        "type": "tab",
        "label": "Global",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5f562f66.a301e",
        "type": "tab",
        "label": "Cube-A",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c4285970.3276d8",
        "type": "tab",
        "label": "web-app",
        "disabled": false,
        "info": ""
    },
    {
        "id": "26093b29.39d8d4",
        "type": "tab",
        "label": "Setup Wireless SSID",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f07e020c.d4d43",
        "type": "subflow",
        "name": "App NavBar",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "3ab766b1.558d9a"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "3ab766b1.558d9a",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "188d93e1.8dcc1c",
        "type": "subflow",
        "name": "HTML",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 40,
                "wires": [
                    {
                        "id": "1da6518.fb1b7af"
                    }
                ]
            }
        ],
        "out": [],
        "env": []
    },
    {
        "id": "8857082f.cfdaa8",
        "type": "subflow",
        "name": "App CSS",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "73f0aea6.1d002"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 320,
                "y": 80,
                "wires": [
                    {
                        "id": "73f0aea6.1d002",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "6a402d92.12d7c4",
        "type": "subflow",
        "name": "App HTML",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "b1fab3c6.1f34c"
                    }
                ]
            }
        ],
        "out": [],
        "env": []
    },
    {
        "id": "6ad7c930.1a06b8",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#000000",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Blinky-Lite-Tutorial",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "44b51478.9c022c",
        "type": "websocket-listener",
        "z": "",
        "path": "/expert/websocket",
        "wholemsg": "false"
    },
    {
        "id": "516aef81.a2867",
        "type": "mqtt-broker",
        "z": "",
        "name": "MQTT Broker",
        "broker": "$(MQTTSERVERIP)",
        "port": "1883",
        "clientid": "$(MQTTCLIENTID)",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "c427a7cd.35f1f8",
        "type": "websocket-listener",
        "z": "",
        "path": "/setup/websocket",
        "wholemsg": "false"
    },
    {
        "id": "e8ef1dd0.f4c9a",
        "type": "websocket-listener",
        "z": "",
        "path": "/monitor/websocket",
        "wholemsg": "false"
    },
    {
        "id": "630fe450.88c6dc",
        "type": "websocket-listener",
        "z": "",
        "path": "/simple/websocket",
        "wholemsg": "false"
    },
    {
        "id": "81c09030.dd70d",
        "type": "serial-port",
        "z": "",
        "serialport": "/dev/rfcomm0",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "12",
        "bin": "bin",
        "out": "count",
        "addchar": "",
        "responsetimeout": "1000"
    },
    {
        "id": "5902d0c0.241a6",
        "type": "file",
        "z": "5f562f66.a301e",
        "name": "Init Settings",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1310,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "6eaa13e9.4147bc",
        "type": "inject",
        "z": "5f562f66.a301e",
        "name": "init 1 sec",
        "topic": "init",
        "payload": "1",
        "payloadType": "num",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "x": 100,
        "y": 300,
        "wires": [
            [
                "2635280b.22f548",
                "3994b851.11f2f8"
            ]
        ]
    },
    {
        "id": "163af492.5e952b",
        "type": "file in",
        "z": "5f562f66.a301e",
        "name": "Init Settings",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 550,
        "y": 280,
        "wires": [
            [
                "53c95857.5f3d68"
            ]
        ]
    },
    {
        "id": "53c95857.5f3d68",
        "type": "json",
        "z": "5f562f66.a301e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 750,
        "y": 280,
        "wires": [
            [
                "30f384ea.cf21fc"
            ]
        ]
    },
    {
        "id": "30f384ea.cf21fc",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Save initSettings in Memory",
        "func": "flow.set('device', msg.payload);\nflow.set('newSetting', 1);\nflow.set('pgm',null);\nreturn null;",
        "outputs": 0,
        "noerr": 0,
        "x": 980,
        "y": 280,
        "wires": []
    },
    {
        "id": "9e954281.d9215",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Make Pretty",
        "func": "var jsonPretty = JSON.stringify(msg.payload,null,2);\nvar filename = 'cube-A-settings.json';\nreturn {topic: msg.payload, payload:jsonPretty, 'filename':filename};",
        "outputs": 1,
        "noerr": 0,
        "x": 1150,
        "y": 80,
        "wires": [
            [
                "5902d0c0.241a6"
            ]
        ]
    },
    {
        "id": "7461da25.d86ac4",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Settings Alarm Scan",
        "func": "scalarAlarmScan(msg.payload, 'setting');\nflow.set('device', msg.payload); \nflow.set('newSetting', 1); \nreturn msg;\n\nfunction getActionArray(device, type, actionType)\n{\n    var actionArray = [];\n    var keys = Object.keys(device);\n    for (var ii = 0; ii < keys.length; ++ii)\n    {\n        if (device[keys[ii]].hasOwnProperty('type'))\n        {\n            if (device[keys[ii]].type == type)\n            {\n                if (device[keys[ii]].action == actionType)\n                {\n                    actionArray.push(device[keys[ii]]);\n                }\n            }\n        }\n    }\n    return actionArray;\n}\nfunction scalarAlarmScan(device, actionType)\n{\n    var actionArray = getActionArray(device, 'scalar', actionType);\n    if (actionArray.length > 0)\n    {\n        for (var ii = 0; ii < actionArray.length; ++ii)\n        {\n            actionArray[ii].alarm.value = 0;\n            if (!isNaN(actionArray[ii].value))\n            {\n                if (actionArray[ii].value < actionArray[ii].alarm.limits.low)  actionArray[ii].alarm.value = 1;\n                if (actionArray[ii].value < actionArray[ii].alarm.limits.lolo) actionArray[ii].alarm.value = 3;\n                if (actionArray[ii].value > actionArray[ii].alarm.limits.high) actionArray[ii].alarm.value = 2;\n                if (actionArray[ii].value > actionArray[ii].alarm.limits.hihi) actionArray[ii].alarm.value = 4;\n            }\n        }\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 80,
        "wires": [
            [
                "81621fcc.16d71"
            ]
        ]
    },
    {
        "id": "9115ea87.0ca208",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Scan Ellipse",
        "func": "device = msg.payload;\nvar toppy = global.get('project') + '/' + global.get('deviceTypeA') + '/' + global.get('deviceNameA') + '/reading';\nvar actionMsg = null;\ndevice.archiveData.value = 1;\nif (device.triggerMode.value > 1) return [{topic:toppy, payload:device},actionMsg];\n\nvar imageAnal = imageAnalysis(JSON.parse(JSON.stringify(device.imageData.value)), device.faceRegionHeight.value, device.faceRegionWidth.value, device.archiveMinTemp.value);\n//    var imageAnal = imageAnalysis(device.imageData.value, device.faceRegionHeight.value, device.faceRegionWidth.value, device.archiveMinTemp.value);\n\ndevice.pixelMin.value = Math.round(10 *imageAnal.minPix ) / 10;\ndevice.pixelMax.value  = Math.round(10 *imageAnal.maxPix ) / 10;\ndevice.bodyTemp.value = Math.round(10 * (imageAnal.maxBoxTempC + device.offsetTemp.value)) / 10;\nif(imageAnal.boxPercent > device.archivePixelPercent.value) device.autoModeAction.value = 1;\n\nif (device.autoModeAction.value == 0)\n{\n    actionMsg = {topic:'actionMsg', payload:0};\n    device.bodyTemp.value = 0;\n    device.archiveData.value = 0;\n}\nelse\n{\n    if ((device.bodyTemp.alarm.limits.low < device.bodyTemp.value) && (device.bodyTemp.value < device.bodyTemp.alarm.limits.high))\n    {\n        actionMsg = {topic:'actionMsg', payload:1};\n        device.autoModeAction.value = 1;\n    }\n    if ((device.bodyTemp.alarm.limits.high < device.bodyTemp.value) && (device.bodyTemp.value < device.bodyTemp.alarm.limits.hihi))\n    {\n        actionMsg = {topic:'actionMsg', payload:2};\n        device.autoModeAction.value = 2;\n    }\n    if ((device.bodyTemp.alarm.limits.low > device.bodyTemp.value) || (device.bodyTemp.value > device.bodyTemp.alarm.limits.hihi))\n    {\n        actionMsg = {topic:'actionMsg', payload:3};\n        device.autoModeAction.value = 3;\n    }\n}\nreturn [{topic:toppy, payload:device},actionMsg];\n\nfunction imageAnalysis(imagePgm, ellipseHeight,ellipseWidth, boxThresholdC)\n{\n    var imageArray = imagePgm.imageArray;\n    var nrows = imageArray.length;\n    var ncols = imageArray[0].length;\n    var minPix = 500.0;\n    var maxPix = -273.0;\n    var nrows = imageArray.length;\n    var ncols = imageArray[0].length;\n    var boxPercent = 0;\n    var maxBoxTempC = -273.0;\n    var boxCnt = 0;\n    var rad2 = ellipseHeight * ellipseWidth / 2.0;\n    rad2 = rad2 * rad2;\n    var xc = (ncols - 1.0) / 2.0;\n    var yc = (nrows - 1.0) / 2.0;\n    for (var irow = 0; irow < nrows; ++irow)\n    {\n        var testH = ellipseWidth * (irow - yc);\n        testH = testH * testH;\n        for (var icol = 0; icol < ncols; ++icol)\n        {\n            var tempC = (((imagePgm.maxval - imagePgm.minval) * imageArray[irow][icol] / 255.0) + imagePgm.minval  - 27315) / 100;\n            if (minPix > tempC) minPix = tempC;\n            if (maxPix < tempC) maxPix = tempC;\n            var testW = ellipseHeight * (icol - xc);\n            testW = testW * testW;\n            if ((testH +  testW) <= rad2)\n            {\n                    if (tempC > boxThresholdC) ++boxPercent;\n                    if (tempC > maxBoxTempC) maxBoxTempC = tempC;\n                    ++boxCnt\n//                    imageArray[irow][icol] = 255;\n            }\n        }\n    }\n    if (boxCnt > 0)\n    {\n        boxPercent = Math.round(1000 * boxPercent / boxCnt) / 10;\n    }\n    return {'minPix': minPix, 'maxPix' : maxPix, 'boxPercent' : boxPercent, 'maxBoxTempC': maxBoxTempC};\n}\n",
        "outputs": 2,
        "noerr": 0,
        "x": 850,
        "y": 580,
        "wires": [
            [
                "cf3576c8.424cf8"
            ],
            [
                "863d7a9.ab20888"
            ]
        ]
    },
    {
        "id": "6c15c07a.68169",
        "type": "link in",
        "z": "5f562f66.a301e",
        "name": "cube-A Settings In",
        "links": [
            "58aa550c.06cb4c"
        ],
        "x": 35,
        "y": 140,
        "wires": [
            [
                "8fd42733.128c98"
            ]
        ]
    },
    {
        "id": "a3ff8e5.b79de7",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Split MQTT topic",
        "func": "var mqttArray = msg.topic.split('/');\nvar device = \n{\n    project     : mqttArray[0],\n    deviceType  : mqttArray[1],\n    name        : mqttArray[2],\n    prop        : mqttArray[3],\n};\nreturn {topic : msg.topic, payload:{topic:'readings', mqttDevice : device, payload:msg.payload}};",
        "outputs": 1,
        "noerr": 0,
        "x": 1430,
        "y": 640,
        "wires": [
            [
                "107beeed.934ed1",
                "b4dd92bb.129c7"
            ]
        ]
    },
    {
        "id": "107beeed.934ed1",
        "type": "websocket out",
        "z": "5f562f66.a301e",
        "name": "/expert/websocket",
        "server": "44b51478.9c022c",
        "client": "",
        "x": 1630,
        "y": 700,
        "wires": []
    },
    {
        "id": "3ab766b1.558d9a",
        "type": "template",
        "z": "f07e020c.d4d43",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- navBar -->\n    <div class=\"jumbotron\" width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td style=\"text-align:left; vertical-align:middle;\"  width=\"20%\">\n                    <a href='https://www.blinky-lite.io/' target='_blank'>\n                        <img src=\"/img/BlinkyLogo.gif\" height=\"75px\"/>\n                    </a>                \n                </td>\n                <td width=\"60%\" style=\"text-align:center; vertical-align:middle;\">\n                    <h1 class=\"jumbotron-title big-text bold-text\">\n                        <img src=\"/img/{{{payload.navBarIcon}}}\" height=\"75px\" style=\"padding-right:20px;\"/><span>{{{payload.title}}}</span>\n                    </h1>\n                </td>\n                <td style=\"text-align:right; vertical-align:middle;\" width=\"20%\">\n                    <a href='/'><img src=\"/img/home.png\" height=\"75px\"/></a>\n                </td>\n            </tr>\n        </table>\n    </div>\n",
        "output": "str",
        "x": 200,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "4109bee6.c2294",
        "type": "template",
        "z": "188d93e1.8dcc1c",
        "name": "HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n{{{payload.head}}}\n  </head>\n  <body>\n{{{payload.navBar}}}\n{{{payload.html.websocket}}}\n{{{payload.body}}}\n{{{payload.foot}}}\n  </body>\n</html>",
        "output": "str",
        "x": 910,
        "y": 40,
        "wires": [
            [
                "fd2bae7.8730f5"
            ]
        ]
    },
    {
        "id": "ed534f2d.ee021",
        "type": "template",
        "z": "188d93e1.8dcc1c",
        "name": "Foot",
        "field": "payload.foot",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div id=\"acknowledgeDialog\" title=\"Acknowledge\" class='card'>\n        <p class='card-title' id='acknowledgeDialogTitle'>Warning</p>\n        <div class='card-body'>\n            <p class='tableText' id='acknowledgeDialogText'>Text</p>\n        </div>\n    </div>\n    <div id=\"optionDialog\" title=\"Option\" class='card'>\n        <p class='card-title' id='optionDialogTitle'>Choice</p>\n        <div class='card-body'>\n            <p class='tableText' id='optionDialogText'>Text</p>\n        </div>\n    </div>\n    <div id=\"messageDialog\" title=\"Message\" class='card'>\n        <p class='card-title' id='messageDialogTitle'>Warning</p>\n        <div class='card-body'>\n            <p class='tableText' id='messageDialogText'>Text</p>\n        </div>\n    </div>\n    <script src=\"/scripts/popper.js\"></script>\n    <script src=\"/scripts/bootstrap.js\"></script>",
        "output": "str",
        "x": 610,
        "y": 40,
        "wires": [
            [
                "20e2a34a.7be64c"
            ]
        ]
    },
    {
        "id": "91ca4a7b.9010f8",
        "type": "template",
        "z": "188d93e1.8dcc1c",
        "name": "Head",
        "field": "payload.head",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <meta charset=\"UTF-8\">\n    <link rel=\"icon\" href=\"/img/favicon.ico?v=4\" type=\"image/x-icon\"/>\n    <title>{{payload.title}}</title>\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui-timepicker-addon.css\"/>\n    <script src=\"/jquery/jquery.js\"></script>\n    <script src=\"/jquery/jquery-ui.js\"></script>\n    <script src=\"/jquery/jquery-ui-timepicker-addon.js\"></script>\n    <script src=\"/scripts/plotly-latest.min.js\"></script>\n    <script src=\"/scripts/visDist/vis.js\"></script>\n    <style>\n{{{payload.css}}}\n    </style>\n    <script>\n{{{payload.utilityScripts}}}\n    </script>\n    <script>\n{{{payload.javascript}}}\n    </script>",
        "output": "str",
        "x": 490,
        "y": 40,
        "wires": [
            [
                "ed534f2d.ee021"
            ]
        ]
    },
    {
        "id": "fd2bae7.8730f5",
        "type": "http response",
        "z": "188d93e1.8dcc1c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1030,
        "y": 40,
        "wires": []
    },
    {
        "id": "85f6e038.56c86",
        "type": "template",
        "z": "188d93e1.8dcc1c",
        "name": "Utility Scripts",
        "field": "payload.utilityScripts",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var ws;\n        var userID = -1;\n        var useWebSocketsFlag = true;\n        var projectName = '{{{payload.projectname}}}';\n        var heartBeatImage = false;\n        var wsUri = '';\n\n        function useWebSockets(webSocketsFlag)\n        {\n            useWebSocketsFlag = webSocketsFlag;\n        }\n        function wsConnectC()\n        {\n            if (!useWebSocketsFlag)\n            {\n                return;\n            }\n            if (wsUri.length < 1)\n            {\n                var uri = window.location.href.split('://');\n                var wslead = 'ws://';\n                if (uri[0] == 'https') wslead = 'wss://';\n                var questionLocation = uri[1].indexOf('?');\n                if (questionLocation >= 0)\n                {\n                    uri[1] = uri[1].substring(0,questionLocation);\n//                    console.log(uri[1]);\n                }\n                if (uri[1].indexOf('/') < (uri[1].length - 1))\n                {\n                    wsUri = wslead + uri[1] + '/websocket';\n                }\n                else\n                {\n                    wsUri = wslead + uri[1] + 'websocket';\n                }\n            }\n            ws = new WebSocket(wsUri);\n            ws.onmessage = function(event)\n            {\n                onWebSocketMessage(JSON.parse(event.data));\n        \n            };\n            ws.onopen = function()\n            {\n                console.log(\"Websocket connected\");\n                $('#webSocketStatus').html('Open');\n                $('#reOpenWebSocketButton').hide();\n                $('#webSocketStatusRow').css('padding-bottom','0px');\n                $('#webSocketStatusCard').hide();\n                onWebSocketOpen();\n            };\n            ws.onclose = function()\n            {\n                console.log(\"Websocket closed\");\n                $('#webSocketStatus').html('Closed');\n                $('#reOpenWebSocketButton').show();\n                $('#webSocketStatusCard').show();\n                $('#webSocketStatusRow').css('padding-bottom','25px');\n                onWebSocketClose();\n            };\n        }\n        function sendWebSocketMessageObject(message)\n        {\n            ws.send(JSON.stringify(message));\n        }\n\n        function getRandomInt(max)\n        {\n          return Math.floor(Math.random() * Math.floor(max));\n        }\n        $( document ).ready(function()\n        {\n            userID  = {{{payload.userID}}};\n            if (!useWebSocketsFlag)\n            {\n                $('#webSocketStatusRow').css('padding-bottom','0px');\n                $('#webSocketStatusCard').hide();\n            }\n            wsConnectC();\n            onDocumentReady();\n        });\n        $( function() \n        {\n            $( \"#acknowledgeDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() { $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n            $( \"#messageDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:[]\n                });\n        } );\n        function optionDialog(headerText, title, text, buttonTexts, buttonFunctions)\n        {\n            var buttonDefinitions = [];\n            for (var ii = 0; ii < buttonTexts.length; ++ii)\n            {\n                buttonDefinitions[ii] = \n                    {\n                        text: buttonTexts[ii],\n                        click: buttonFunctions[ii],\n                        showText: false\n                    };\n            }\n            $( \"#optionDialog\" ).dialog( \"option\", \"title\", headerText );   \n            $( \"#optionDialog\" ).dialog( \"option\", \"buttons\", buttonDefinitions);\n            $( \"#optionDialogTitle\" ).html(title);\n            $( \"#optionDialogText\" ).html(text);\n            $( \"#optionDialog\" ).dialog( \"open\" );\n        }\n        $( function() \n        {\n            $( \"#optionDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n        } );\n        function acknowledgeDialog(headerText, title, text)\n        {\n            $( \"#acknowledgeDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#acknowledgeDialogTitle\" ).html(title);\n            $( \"#acknowledgeDialogText\" ).html(text);\n            $( \"#acknowledgeDialog\" ).dialog( \"open\" );\n        }\n        function messageDialog(headerText, title, text)\n        {\n            $( \"#messageDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#messageDialogTitle\" ).html(title);\n            $( \"#messageDialogText\" ).html(text);\n            $( \"#messageDialog\" ).dialog( \"open\" );\n        }\n        function sendSettingToMqtt(mqttMessage)\n        {\n            var socketMessage = \n            {\n                topic       : 'sendSettingToMqtt',\n                mqttMessage : mqttMessage,\n                userID      : userID\n            };\n            sendWebSocketMessageObject({topic : 'sendSettingToMqtt', mqttMessage : mqttMessage, userID : userID});\n        }\n        function heartbeat()\n        {\n            heartBeatImage = !heartBeatImage;\n            var heartBeatImageSrc = '/img/heartRed.png';\n            if (heartBeatImage) heartBeatImageSrc = '/img/heartPink.png';\n            $('#heartBeatID').attr('src',heartBeatImageSrc);\n        }\n",
        "output": "str",
        "x": 350,
        "y": 40,
        "wires": [
            [
                "91ca4a7b.9010f8"
            ]
        ]
    },
    {
        "id": "1da6518.fb1b7af",
        "type": "function",
        "z": "188d93e1.8dcc1c",
        "name": "Create userID",
        "func": "function getRandomInt(max)\n{\n  return Math.floor(Math.random() * Math.floor(max));\n}\nmsg.payload['userID'] = getRandomInt(32768);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 180,
        "y": 40,
        "wires": [
            [
                "85f6e038.56c86"
            ]
        ]
    },
    {
        "id": "20e2a34a.7be64c",
        "type": "template",
        "z": "188d93e1.8dcc1c",
        "name": "html.websocket",
        "field": "payload.html.websocket",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- websocket status HTML -->\n    <div width=\"100%\">\n        <div class='row' id='webSocketStatusRow' style='padding-bottom: 0px;'>\n            <div class='col-md-12' align='center'>\n\n                <div class='card' id='webSocketStatusCard' >\n                    <p class='card-title'>Web Socket Status</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Websocket Status</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <button class='btn card-button btn-block big-text' id='reOpenWebSocketButton' onclick=\"wsConnectC()\">Re-open</button>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='webSocketStatus' >Closed</span>\n                                   </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 760,
        "y": 40,
        "wires": [
            [
                "4109bee6.c2294"
            ]
        ]
    },
    {
        "id": "73f0aea6.1d002",
        "type": "template",
        "z": "8857082f.cfdaa8",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #415c71;\n          --color2: #547792;\n          --color3: #9eb5c7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n          background-color: white !important;\n          padding-left:25px;\n          padding-right:25px;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n\n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color: white;\n          padding-top:25px;\n          padding-bottom:25px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n       }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n        }\n        .card-body\n        {\n          background-color: var(--color3);;\n        }\n        .card-button\n        {\n          color: var(--color5) !important;\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .danger-card\n        {\n          background-color: yellow !important;\n          text-align: center;\n        }\n        .danger-card-body\n        {\n          background-color: yellow;\n        }\n        .danger-card-button\n        {\n          color: yellow !important;\n          background-color: red !important;\n          font-weight: bold;\n        }\n        .danger-card-title\n        {\n          color: red;\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .danger-card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .tableHeading\n        {\n          color:var(--container-title-color);\n        }\n        .tableText\n        {\n          color:var(--container-text-color);\n          font-size: var(--big-text-size);\n        }\n       .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n        .ui-slider\n        {\n            height: 90px;\n            background-color: var(--color1) !important;\n        }\n        .ui-slider .ui-slider-handle \n        {\n            height: 100px;\n            width: 100px;\n            background-color: var(--color5) !important;\n        }\n        .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n        .custom-select\n        {\n            color: black;\n            background-color: white;\n            height:80px;\n            line-height:70px;\n        }\n",
        "output": "str",
        "x": 190,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "b1fab3c6.1f34c",
        "type": "subflow:8857082f.cfdaa8",
        "z": "6a402d92.12d7c4",
        "name": "",
        "env": [],
        "x": 200,
        "y": 80,
        "wires": [
            [
                "e205aa81.b2b958"
            ]
        ]
    },
    {
        "id": "133517a3.6ba2b8",
        "type": "subflow:188d93e1.8dcc1c",
        "z": "6a402d92.12d7c4",
        "name": "",
        "x": 490,
        "y": 80,
        "wires": []
    },
    {
        "id": "e205aa81.b2b958",
        "type": "subflow:f07e020c.d4d43",
        "z": "6a402d92.12d7c4",
        "name": "",
        "env": [],
        "x": 350,
        "y": 80,
        "wires": [
            [
                "133517a3.6ba2b8"
            ]
        ]
    },
    {
        "id": "8f14813b.bcdfc",
        "type": "exec",
        "z": "5f562f66.a301e",
        "command": "pm2 restart red",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1000,
        "y": 200,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "960991fa.0fafe",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Check Restart Setting",
        "func": "if (msg.payload != 1) return null\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 760,
        "y": 200,
        "wires": [
            [
                "8f14813b.bcdfc"
            ]
        ]
    },
    {
        "id": "8fd42733.128c98",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Filter Websocket MQTT like message",
        "func": "var msg1 = null;\nvar msg2 = null\nvar mqttArray = msg.topic.split('/');\nif (mqttArray[3] == 'restartTray')\n{\n    msg2 = msg;\n}\nelse\n{\n    msg1 = msg;\n}\n\nreturn [msg1,msg2];",
        "outputs": 2,
        "noerr": 0,
        "x": 230,
        "y": 140,
        "wires": [
            [
                "6c43015c.a827c"
            ],
            [
                "225946b1.9e8b3a"
            ]
        ]
    },
    {
        "id": "2635280b.22f548",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Make Pretty",
        "func": "var filename = 'cube-A-settings.json';\nreturn {topic: 'readFile', 'filename':filename};",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 280,
        "wires": [
            [
                "163af492.5e952b"
            ]
        ]
    },
    {
        "id": "6c43015c.a827c",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Filter MQTT",
        "func": "var mqttArray = msg.topic.split('/');\nif (mqttArray[0] != global.get('project')) return null;\nif (mqttArray[1] != global.get('deviceTypeA')) return null;\nif (mqttArray[2] != global.get('deviceNameA')) return null;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 80,
        "wires": [
            [
                "7461da25.d86ac4"
            ]
        ]
    },
    {
        "id": "225946b1.9e8b3a",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Filter MQTT",
        "func": "var mqttArray = msg.topic.split('/');\nif (mqttArray[0] != global.get('project')) return null;\nif (mqttArray[1] != global.get('deviceTypeA')) return null;\nif (mqttArray[2] != global.get('deviceNameA')) return null;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 200,
        "wires": [
            [
                "960991fa.0fafe"
            ]
        ]
    },
    {
        "id": "1482e22f.57fa2e",
        "type": "http in",
        "z": "c4285970.3276d8",
        "name": "/expert",
        "url": "/expert",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 80,
        "wires": [
            [
                "71ce0943.81bf18"
            ]
        ]
    },
    {
        "id": "71ce0943.81bf18",
        "type": "function",
        "z": "c4285970.3276d8",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = global.get('deviceNameA')\nmsg.payload['script']['deviceType'] = global.get('deviceTypeA');\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 80,
        "wires": [
            [
                "6533b535.454c4c"
            ]
        ]
    },
    {
        "id": "c76a9544.852e88",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "SbirTem {{{payload.script.name}}} Expert",
        "output": "str",
        "x": 240,
        "y": 160,
        "wires": [
            [
                "7bb92ce8.d547e4"
            ]
        ]
    },
    {
        "id": "f078068d.c90bc8",
        "type": "subflow:6a402d92.12d7c4",
        "z": "c4285970.3276d8",
        "name": "",
        "x": 1450,
        "y": 280,
        "wires": []
    },
    {
        "id": "450b0136.7ccbd",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 10px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.spectrogram}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 10px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.history}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 10px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.controls}}}\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 950,
        "y": 280,
        "wires": [
            [
                "f078068d.c90bc8"
            ]
        ]
    },
    {
        "id": "d3b167fa.414fa8",
        "type": "inject",
        "z": "3f2da72f.995ab8",
        "name": "PROJECT",
        "topic": "project",
        "payload": "PROJECT",
        "payloadType": "env",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 110,
        "y": 80,
        "wires": [
            [
                "5497633f.4a758c"
            ]
        ]
    },
    {
        "id": "8f82985c.1fa328",
        "type": "inject",
        "z": "3f2da72f.995ab8",
        "name": "SETTINGSPASSWORD",
        "topic": "settingsPassword",
        "payload": "SETTINGSPASSWORD",
        "payloadType": "env",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 150,
        "y": 140,
        "wires": [
            [
                "5497633f.4a758c"
            ]
        ]
    },
    {
        "id": "5497633f.4a758c",
        "type": "function",
        "z": "3f2da72f.995ab8",
        "name": "Save global init",
        "func": "global.set(msg.topic,msg.payload);\nglobal.set('websocketPing',0);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "x": 460,
        "y": 100,
        "wires": []
    },
    {
        "id": "d162777.1380788",
        "type": "exec",
        "z": "3f2da72f.995ab8",
        "command": "iwconfig",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 280,
        "y": 320,
        "wires": [
            [
                "adf1efae.e4e0f"
            ],
            [],
            []
        ]
    },
    {
        "id": "77ae9cee.d460f4",
        "type": "inject",
        "z": "3f2da72f.995ab8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 120,
        "y": 320,
        "wires": [
            [
                "d162777.1380788"
            ]
        ]
    },
    {
        "id": "adf1efae.e4e0f",
        "type": "function",
        "z": "3f2da72f.995ab8",
        "name": "Get Signal Quality",
        "func": "var linkQuality = 0;\nvar signalLevel = -100;\nvar ssid = \"none\";\n\nvar info = msg.payload;\nvar linkStartIndex  = info.indexOf('Link Quality=');\nif (linkStartIndex >= 0)\n{\n    var levelStartIndex = info.indexOf('Signal level=');\n    var linkStopIndex   = info.indexOf('/70');\n    linkQuality = Number(info.substring(linkStartIndex + 13, linkStopIndex));\n    signalLevel =  Number(info.substring(levelStartIndex + 13, levelStartIndex + 17));\n    ssid = info.substring(info.indexOf('ESSID') + 7);\n    ssid = ssid.substring(0,ssid.indexOf('\"'));\n}\nvar val = {linkQuality : linkQuality, signalLevel: signalLevel, ssid:ssid};\nglobal.set('linkQuality',linkQuality);\nglobal.set('signalLevel', signalLevel);\nglobal.set('ssid', ssid);\nreturn {topic :'test',payload : val};",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 320,
        "wires": [
            [
                "c40dd8f4.63a9d8"
            ]
        ]
    },
    {
        "id": "6533b535.454c4c",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "thermoYellow.png",
        "output": "str",
        "x": 250,
        "y": 120,
        "wires": [
            [
                "c76a9544.852e88"
            ]
        ]
    },
    {
        "id": "f062c2f5.4fb63",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Process Data",
        "func": "device = flow.get('device');\ndevice.imageData.value = null;\ndevice.archiveData.value = 0;\ndevice.bodyTemp.value = 0;\ndevice.autoModeAction.value = 0;\n\nif (msg.payload.length < 1)\n{\n    var errCount = context.get('errCount');\n    if (errCount == undefined) errCount = 0;\n    ++errCount\n    if (errCount < 5)\n    {\n        context.set('errCount',errCount);\n        return [null, null];\n    }\n    else\n    {\n        context.set('errCount',0);\n        node.warn(\"Resetting Camera\");\n        flow.set('resettingCamera',true);\n        return [null, {topic:'resetCamera',payload:true}];\n    }\n}\nelse\n{\n    context.set('errCount',0);\n}\nvar imgArray = [];\nvar dataView     = new DataView(new ArrayBuffer(2));\nvar ndataPts = 4800 * device.resMode.value * device.resMode.value;\nvar nrows = 60 * device.resMode.value;\nvar ncols = 80 * device.resMode.value;\nfor (var irow = 0; irow < ndataPts; ++irow)\n{\n        dataView.setUint8(0, msg.payload[irow * 2]);\n        dataView.setUint8(1, msg.payload[irow * 2 + 1]);\n        imgArray[irow] = dataView.getUint16(0);\n}\nvar minval = imgArray[0];\nvar maxval = imgArray[0];\nfor (var irow = 0; irow < ndataPts; ++irow)\n{\n        if ( minval > imgArray[irow]) minval = imgArray[irow];\n        if ( maxval < imgArray[irow]) maxval = imgArray[irow];\n}\nif (minval == 0) return [null, null];\nvar deltatTcal = (new Date().getTime() - flow.get('calTime')) / 1000.0;\nvar tCorr = 0.0;\nvar trise = 4.0;\nvar tdecay = 12.0;\nif ((0.0 < deltatTcal) &&(deltatTcal < 60.0))\n{\n    tCorr = Math.round(-100.0 * (deltatTcal / trise) * Math.exp(-deltatTcal / tdecay));\n    for (var irow = 0; irow < ndataPts; ++irow)\n    {\n        imgArray[irow] = imgArray[irow] + tCorr;\n    }\n    minval = minval + tCorr;\n    maxval = maxval + tCorr;\n}\n\nvar imgArray2D = [];\nvar deltaVal = maxval - minval;\nif (deltaVal == 0) deltaVal = 1;\nvar numPix = 0;\nvar tempThreshold = device.archiveMinTemp.value * 100 + 27315;\nfor (var irow = 0; irow < nrows; ++irow)\n{\n    imgArray2D[irow] = [];\n    for (var icol = 0; icol < ncols; ++icol)\n    {\n        imgArray2D[irow][icol] = Math.floor(256.0 * (imgArray[irow * ncols + icol] - minval) / deltaVal);\n        if (imgArray[irow * ncols + icol] >= tempThreshold) ++numPix;\n    }    \n}\nvar imgArray2DT = [];\nif (device.transpose.value == 1)\n{\n    for (var icol = 0; icol < ncols; ++icol)\n    {\n        imgArray2DT[icol] = [];\n        for (var irow = 0; irow < nrows; ++irow)\n        {\n            imgArray2DT[icol][irow] = imgArray2D[irow][icol];\n        }\n    }\n    imgArray2D = imgArray2DT;\n    var tempNrows = nrows;\n    nrows = ncols;\n    ncols = tempNrows; \n}\nvar imgArray2DFV = [];\nif (device.flipVertical.value == 1)\n{\n    for (var irow = 0; irow < nrows; ++irow)\n    {\n        imgArray2DFV[irow] = [];\n        for (var icol = 0; icol < ncols; ++icol)\n        {\n            imgArray2DFV[irow][icol] = imgArray2D[nrows - irow - 1][icol];\n        }    \n    }\n    imgArray2D = imgArray2DFV;\n}\nvar imgArray2DFH = [];\nif (device.flipHorizontal.value == 1)\n{\n    for (var irow = 0; irow < nrows; ++irow)\n    {\n        imgArray2DFH[irow] = [];\n        for (var icol = 0; icol < ncols; ++icol)\n        {\n            imgArray2DFH[irow][icol] = imgArray2D[irow][ncols - icol - 1];\n        }    \n    }\n    imgArray2D = imgArray2DFH;\n}\nvar pgm = \n{\n    'type'      : 'P2',\n    'timeStamp' : new Date().getTime(),\n    'nrows'     : nrows,\n    'ncols'     : ncols,\n    'minval'    : minval,\n    'maxval'    : maxval,\n    'imageArray': imgArray2D\n};\nif ((device.triggerMode.value == 0) || (device.triggerMode.value == 1))\n{\n    if (numPix < 10)\n    {\n        return [null,null];\n    }\n    else\n    {\n        flow.set('lastObjectDetectedTime',new Date().getTime());\n    }\n}\ndevice.manualTrigger.value = 0;\ndevice.imageData.value = pgm;\ndevice.archiveData.value = 1;\ndevice.pixelMin.value = Math.round(0.1 *  (pgm.minval - 27315) ) / 10;\ndevice.pixelMax.value  = Math.round(0.1 *  (pgm.maxval - 27315) ) / 10;\ndevice.timeStamp = pgm.timeStamp;\ndevice.autoModeAction.value = 0;\n\nreturn [{topic:'takeImage',payload:device}, null];",
        "outputs": 2,
        "noerr": 0,
        "x": 660,
        "y": 580,
        "wires": [
            [
                "9115ea87.0ca208"
            ],
            [
                "7079fa00.acfb14"
            ]
        ]
    },
    {
        "id": "756aff3b.081cc",
        "type": "exec",
        "z": "5f562f66.a301e",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Capture Flir image",
        "x": 650,
        "y": 520,
        "wires": [
            [
                "f062c2f5.4fb63",
                "2cfe9e64.64e0a2"
            ],
            [
                "2cfe9e64.64e0a2"
            ],
            []
        ]
    },
    {
        "id": "e3701624.e0da58",
        "type": "mqtt out",
        "z": "5f562f66.a301e",
        "name": "Publish Readings",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "broker": "516aef81.a2867",
        "x": 1650,
        "y": 580,
        "wires": []
    },
    {
        "id": "6a87dbb1.d06e64",
        "type": "mqtt in",
        "z": "5f562f66.a301e",
        "name": "Subscribe Settings",
        "topic": "+/+/+/setting",
        "qos": "0",
        "datatype": "auto",
        "broker": "516aef81.a2867",
        "x": 110,
        "y": 80,
        "wires": [
            [
                "a413542a.4b41a8"
            ]
        ]
    },
    {
        "id": "15c1f139.572e9f",
        "type": "mqtt in",
        "z": "5f562f66.a301e",
        "name": "Restart Tray",
        "topic": "+/+/+/restartTray",
        "qos": "0",
        "datatype": "auto",
        "broker": "516aef81.a2867",
        "x": 90,
        "y": 200,
        "wires": [
            [
                "a58d418f.0a53e"
            ]
        ]
    },
    {
        "id": "288e416.8374dbe",
        "type": "status",
        "z": "5f562f66.a301e",
        "name": "",
        "scope": [
            "756aff3b.081cc"
        ],
        "x": 100,
        "y": 740,
        "wires": [
            [
                "3e88e0d5.feeb1"
            ]
        ]
    },
    {
        "id": "3e88e0d5.feeb1",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Get camera process",
        "func": "var newMsg = {fill: msg.status.fill, pid:msg.status.text}\nflow.set('cameraProcess', newMsg);\nreturn null;",
        "outputs": 0,
        "noerr": 0,
        "x": 280,
        "y": 740,
        "wires": []
    },
    {
        "id": "64edca1f.282284",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 700,
        "y": 460,
        "wires": [
            [
                "e68a810e.f7863"
            ]
        ]
    },
    {
        "id": "e68a810e.f7863",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Check if Process hung",
        "func": "var process = flow.get('cameraProcess');\nvar newMsg = null;\nif (process.pid != undefined)\n{\n    var pid = Number(process.pid.substring(4)) + 1;\n    newMsg = {topic:'killProcess',payload:pid}\n//    node.warn('Camera Hang')\n}\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 900,
        "y": 460,
        "wires": [
            [
                "3132ba84.59a1f6",
                "9067a4c6.5d4488"
            ]
        ]
    },
    {
        "id": "3132ba84.59a1f6",
        "type": "exec",
        "z": "5f562f66.a301e",
        "command": "kill -9",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1090,
        "y": 460,
        "wires": [
            [],
            [
                "d10b4167.c71e7"
            ],
            []
        ]
    },
    {
        "id": "58aa550c.06cb4c",
        "type": "link out",
        "z": "5f562f66.a301e",
        "name": "Settings Out",
        "links": [
            "6c15c07a.68169"
        ],
        "x": 595,
        "y": 880,
        "wires": []
    },
    {
        "id": "3a1fb97e.c10786",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "sendSettingToMqtt",
        "func": "return {\n    topic   : msg.payload.mqttMessage.topic, \n    payload : msg.payload.mqttMessage.payload, \n    userID  : msg.payload.userID };\n",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 880,
        "wires": [
            [
                "58aa550c.06cb4c"
            ]
        ]
    },
    {
        "id": "75bcac45.dd63c4",
        "type": "json",
        "z": "5f562f66.a301e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 880,
        "wires": [
            [
                "3a1fb97e.c10786"
            ]
        ]
    },
    {
        "id": "fcf8eef6.6c823",
        "type": "websocket in",
        "z": "5f562f66.a301e",
        "name": "/expert/websocket",
        "server": "44b51478.9c022c",
        "client": "",
        "x": 130,
        "y": 880,
        "wires": [
            [
                "75bcac45.dd63c4"
            ]
        ]
    },
    {
        "id": "a413542a.4b41a8",
        "type": "json",
        "z": "5f562f66.a301e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 310,
        "y": 80,
        "wires": [
            [
                "6c43015c.a827c"
            ]
        ]
    },
    {
        "id": "a58d418f.0a53e",
        "type": "json",
        "z": "5f562f66.a301e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 200,
        "wires": [
            [
                "225946b1.9e8b3a"
            ]
        ]
    },
    {
        "id": "56b21d74.f13534",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "set to 0",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 480,
        "y": 1660,
        "wires": [
            [
                "a325a9ec.7e9188"
            ]
        ]
    },
    {
        "id": "620ca605.e38238",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "set to 1",
        "func": "msg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 180,
        "y": 1640,
        "wires": [
            [
                "78708c9a.23eac4",
                "a325a9ec.7e9188"
            ]
        ]
    },
    {
        "id": "78708c9a.23eac4",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 330,
        "y": 1660,
        "wires": [
            [
                "56b21d74.f13534"
            ]
        ]
    },
    {
        "id": "a59831a8.7ff9",
        "type": "link in",
        "z": "5f562f66.a301e",
        "name": "Capture Flir image In",
        "links": [
            "a851f6f5.3a80f8",
            "217bb4e6.bc7ffc",
            "81763557.747698"
        ],
        "x": 55,
        "y": 520,
        "wires": [
            [
                "72aa34e4.5cf97c"
            ]
        ]
    },
    {
        "id": "bf3bbeb6.27c5f",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 160,
        "y": 1100,
        "wires": [
            [
                "5fe1f713.dae2a8"
            ]
        ]
    },
    {
        "id": "f56d3371.a7153",
        "type": "inject",
        "z": "3f2da72f.995ab8",
        "name": "DEVICETYPEA",
        "topic": "deviceTypeA",
        "payload": "DEVICETYPEA",
        "payloadType": "env",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 120,
        "y": 200,
        "wires": [
            [
                "5497633f.4a758c"
            ]
        ]
    },
    {
        "id": "c09bc160.3a3f1",
        "type": "inject",
        "z": "3f2da72f.995ab8",
        "name": "DEVICENAMEA",
        "topic": "deviceNameA",
        "payload": "DEVICENAMEA",
        "payloadType": "env",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 120,
        "y": 260,
        "wires": [
            [
                "5497633f.4a758c"
            ]
        ]
    },
    {
        "id": "a851f6f5.3a80f8",
        "type": "link out",
        "z": "5f562f66.a301e",
        "name": "target distance out",
        "links": [
            "a59831a8.7ff9"
        ],
        "x": 355,
        "y": 600,
        "wires": []
    },
    {
        "id": "6c495461.9069cc",
        "type": "rpi-srf",
        "z": "5f562f66.a301e",
        "name": "",
        "topic": "SRF",
        "pulse": "1",
        "pins": "29,31",
        "x": 90,
        "y": 800,
        "wires": [
            [
                "6840cfcb.cb382"
            ]
        ]
    },
    {
        "id": "6840cfcb.cb382",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "HC04 Distance",
        "func": "if (flow.get('device') == undefined) return null;\nif (flow.get('lastObjectDetectedTime') == undefined) return null;\nflow.get('device').ultraSoundDistance.value = Number(msg.payload);\nif (flow.get('device').ultraSoundDistance.value < flow.get('device').ultraSoundRange.value)\n{\n    flow.set('lastObjectDetectedTime',new Date().getTime());\n}\nreturn null",
        "outputs": 0,
        "noerr": 0,
        "x": 240,
        "y": 800,
        "wires": []
    },
    {
        "id": "ffd48d2b.d729e",
        "type": "inject",
        "z": "5f562f66.a301e",
        "name": "Manual Camera trigger",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "60",
        "x": 160,
        "y": 600,
        "wires": [
            [
                "a851f6f5.3a80f8"
            ]
        ]
    },
    {
        "id": "3994b851.11f2f8",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Initialize Stuff",
        "func": "flow.set('resettingCamera',true);\nflow.set('cameraInUse',false);\nflow.set('lastTriggerTime',new Date().getTime());\nflow.set('lastHeartbeatTime',new Date().getTime());\nflow.set('lastObjectDetectedTime',new Date().getTime());\nvar voiceWarnings = [\n    [\"\"        , \"\"        ,\"\"            ,\"\"          ,\"\"         ,\"\"                   ,\"\"],\n    [\"Welcome\" ,\"Välkommen\",\"καλως ΗΡΘΑΤΕ\",\"Bienvenido\",\"Benvenuto\",\"Herzlich willkommen\",\"Bienvenu\"],\n    [\"Good bye\",\"Hej då\"   ,\"Αντιο σας\"   ,\"Adiós\"     ,\"Addio\"    ,\"Auf Wiedersehen\"    ,\"Au revoir\"],\n    [\"\"        ,\"\"         ,\"\"            ,\"\"          ,\"\"         ,\"\"                   ,\"\"] ];\nflow.set('voiceWarnings',voiceWarnings);\nvar languageFlags = [' -v en',' -v sv',' -v el',' -v es',' -v it',' -v de',' -v fr'];\nflow.set('languageFlags',languageFlags);\nflow.set('calTime',0);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 340,
        "wires": [
            [
                "6abb16.fc9774ec"
            ]
        ]
    },
    {
        "id": "fd6e82bc.30235",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "clear camera reset",
        "func": "flow.set('resettingCamera',false);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "x": 1350,
        "y": 1100,
        "wires": []
    },
    {
        "id": "6c8ad237.33ae7c",
        "type": "inject",
        "z": "26093b29.39d8d4",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 840,
        "y": 40,
        "wires": [
            [
                "6d4f56e0.04a238"
            ]
        ]
    },
    {
        "id": "6d4f56e0.04a238",
        "type": "exec",
        "z": "26093b29.39d8d4",
        "command": "iwconfig wlan0 | grep ESSID",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 840,
        "y": 100,
        "wires": [
            [
                "c6d2055.718baf8"
            ],
            [],
            []
        ]
    },
    {
        "id": "c6d2055.718baf8",
        "type": "function",
        "z": "26093b29.39d8d4",
        "name": "Get SSID",
        "func": "var ssid = msg.payload.substring(msg.payload.indexOf(\"ESSID\") + 6).split('\\n')[0];\nreturn {topic:msg.topic, payload:{topic:msg.topic ,payload:ssid, userID: msg.userID }};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1040,
        "y": 80,
        "wires": [
            [
                "9bc013a4.b46c"
            ]
        ]
    },
    {
        "id": "1e80ca53.767a96",
        "type": "http in",
        "z": "26093b29.39d8d4",
        "name": "/setup",
        "url": "/setup",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 460,
        "wires": [
            [
                "2213c6c9.33a20a"
            ]
        ]
    },
    {
        "id": "e1192fe0.96315",
        "type": "template",
        "z": "26093b29.39d8d4",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "SbirTem {{{payload.script.name}}} Setup",
        "output": "str",
        "x": 240,
        "y": 540,
        "wires": [
            [
                "fc3a3f22.7533"
            ]
        ]
    },
    {
        "id": "8c1b90c5.b4e4b",
        "type": "subflow:6a402d92.12d7c4",
        "z": "26093b29.39d8d4",
        "name": "",
        "x": 910,
        "y": 500,
        "wires": []
    },
    {
        "id": "fc3a3f22.7533",
        "type": "template",
        "z": "26093b29.39d8d4",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n        var appStarted = false;\n        var networkList = null;\n        var selectedNetwork = -1;\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            $('#pwDialog').hide();\n        }\n        function onWebSocketOpen()\n        {\n            if (!appStarted)\n            {\n                sendWebSocketMessageObject({topic : 'getConnection',userID : userID});\n                appStarted = true;\n            }\n        }\n        function onWebSocketClose()\n        {\n            wsConnectC();\n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'getConnection':\n                    $('#connectedSSID').text(msg.payload);\n                    sendWebSocketMessageObject({topic : 'getNetworks',userID : userID});\n                    break;\n                case 'connectToNetwork':\n                    sendWebSocketMessageObject({topic : 'getConnection',userID : userID});\n                    $('#ssid').attr('disabled',false);\n                    $('#ssidkey').attr('disabled',false);\n                    $('#ssidButton').attr('disabled',false);\n                    break;\n                default:\n                // code block\n            }\n        }\n        function setSsid()\n        {\n            var ssid = $('#ssid').val();\n            var ssidkey = $('#ssidkey').val();\n            sendWebSocketMessageObject({topic : 'connectToNetwork',userID : userID, payload:{ssid:ssid, key:ssidkey}});\n            $('#connectedSSID').text('');\n            $('#ssid').val('');\n            $('#ssid').attr('disabled',true);\n            $('#ssidkey').val('');\n            $('#ssidkey').attr('disabled',true);\n            $('#ssidButton').attr('disabled',true);\n            \n        }\n",
        "output": "str",
        "x": 590,
        "y": 460,
        "wires": [
            [
                "380c1491.22fa9c"
            ]
        ]
    },
    {
        "id": "380c1491.22fa9c",
        "type": "template",
        "z": "26093b29.39d8d4",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n",
        "output": "str",
        "x": 580,
        "y": 500,
        "wires": [
            [
                "4e6c8908.0524c8"
            ]
        ]
    },
    {
        "id": "41d7170c.80e638",
        "type": "template",
        "z": "26093b29.39d8d4",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 10px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.wirelessSetup}}}\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 770,
        "y": 500,
        "wires": [
            [
                "8c1b90c5.b4e4b"
            ]
        ]
    },
    {
        "id": "930a7a63.11bf58",
        "type": "template",
        "z": "26093b29.39d8d4",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "thermoYellow.png",
        "output": "str",
        "x": 250,
        "y": 500,
        "wires": [
            [
                "e1192fe0.96315"
            ]
        ]
    },
    {
        "id": "2213c6c9.33a20a",
        "type": "function",
        "z": "26093b29.39d8d4",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = global.get('deviceNameA')\nmsg.payload['script']['deviceType'] = global.get('deviceTypeA');\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 460,
        "wires": [
            [
                "930a7a63.11bf58"
            ]
        ]
    },
    {
        "id": "4e6c8908.0524c8",
        "type": "template",
        "z": "26093b29.39d8d4",
        "name": "html.wirelessSetup",
        "field": "payload.html.wirelessSetup",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='card'>\n                    <div class='row'>\n                        <div class='col-md-2'>\n                        </div>\n                        <div class='col-md-8'>\n                            <p class='card-title'>Network Connection</p>\n                         </div>\n                        <div class='col-md-2'>\n                        </div>\n                    </div>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 10px;'>\n                            <div class='col-md-6'>\n                                <span  class='card-text' >Connected to:</span>\n                            </div>\n                            <div class='col-md-6'>\n                                 <span  class='card-text' id='connectedSSID'>off/any</span>\n                            </div>\n                        </div>\n                        <div class='row' style='padding-bottom: 10px;'>\n                            <div class='col-md-4'>\n                                <span class=\"tableText\">SSID</span>\n                            </div>\n                            <div class='col-md-8'>\n                                <input class=\"form-control tableText\" id=\"ssid\" type=\"text\" value=\"\" />\n                             </div>\n                        </div>\n                        <div class='row' style='padding-bottom: 10px;'>\n                            <div class='col-md-4'>\n                                <span class=\"tableText\">KEY</span>\n                            </div>\n                            <div class='col-md-8'>\n                                <input class=\"form-control tableText\" id=\"ssidkey\" type=\"text\" value=\"\" />\n                             </div>\n                        </div>\n                        <div class='row' style='padding-bottom: 10px;'>\n                            <div class='col-md-4'>\n                            </div>\n                            <div class='col-md-4'>\n                                <button class='btn btn-block card-button big-text' id=\"ssidButton\" onclick=\"setSsid()\" >Connect</button>\n                             </div>\n                            <div class='col-md-4'>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 810,
        "y": 460,
        "wires": [
            [
                "41d7170c.80e638"
            ]
        ]
    },
    {
        "id": "ab64b0d5.c3fee",
        "type": "websocket in",
        "z": "26093b29.39d8d4",
        "name": "/setup/websocket",
        "server": "c427a7cd.35f1f8",
        "client": "",
        "x": 140,
        "y": 80,
        "wires": [
            [
                "dbec0823.672678"
            ]
        ]
    },
    {
        "id": "9bc013a4.b46c",
        "type": "websocket out",
        "z": "26093b29.39d8d4",
        "name": "/setup/websocket",
        "server": "c427a7cd.35f1f8",
        "client": "",
        "x": 1230,
        "y": 140,
        "wires": []
    },
    {
        "id": "dbec0823.672678",
        "type": "json",
        "z": "26093b29.39d8d4",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 80,
        "wires": [
            [
                "bb0701eb.a4b29"
            ]
        ]
    },
    {
        "id": "5ead619d.4bfff",
        "type": "switch",
        "z": "26093b29.39d8d4",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "getNetworks",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getConnection",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "connectToNetwork",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 610,
        "y": 80,
        "wires": [
            [],
            [
                "6d4f56e0.04a238"
            ],
            [
                "71a17106.a018d"
            ]
        ]
    },
    {
        "id": "bb0701eb.a4b29",
        "type": "function",
        "z": "26093b29.39d8d4",
        "name": "set userId and topic",
        "func": "return {\n    topic   : msg.payload.topic, \n    userID  : msg.payload.userID,\n    payload : msg.payload.payload};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 80,
        "wires": [
            [
                "5ead619d.4bfff"
            ]
        ]
    },
    {
        "id": "71a17106.a018d",
        "type": "function",
        "z": "26093b29.39d8d4",
        "name": "Prepare WPA",
        "func": "var fileContents = 'ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\\nupdate_config=1\\ncountry=SE\\n';\nfileContents = fileContents + 'network={\\n   ssid=\"' + msg.payload.ssid + '\"\\n   psk=\"' + msg.payload.key + '\"\\n}\\n'\nreturn {topic:msg.topic, payload:fileContents};",
        "outputs": 1,
        "noerr": 0,
        "x": 760,
        "y": 160,
        "wires": [
            [
                "3ef93a0f.951976"
            ]
        ]
    },
    {
        "id": "3ef93a0f.951976",
        "type": "file",
        "z": "26093b29.39d8d4",
        "name": "Write to ssid.conf",
        "filename": "/home/pi/ssid.conf",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 950,
        "y": 160,
        "wires": [
            [
                "4c1194c8.db057c"
            ]
        ]
    },
    {
        "id": "4c1194c8.db057c",
        "type": "exec",
        "z": "26093b29.39d8d4",
        "command": "sudo mv /home/pi/ssid.conf /etc/wpa_supplicant/wpa_supplicant.conf",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "mv ssid to wpa",
        "x": 760,
        "y": 220,
        "wires": [
            [
                "1acb5f15.919f11"
            ],
            [],
            []
        ]
    },
    {
        "id": "1acb5f15.919f11",
        "type": "delay",
        "z": "26093b29.39d8d4",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 920,
        "y": 220,
        "wires": [
            [
                "20f7c462.3d395c"
            ]
        ]
    },
    {
        "id": "20f7c462.3d395c",
        "type": "exec",
        "z": "26093b29.39d8d4",
        "command": "sudo wpa_cli -i wlan0 reconfigure",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "wlan0 reconfigure",
        "x": 1090,
        "y": 220,
        "wires": [
            [
                "c80f01f0.2fe93"
            ],
            [],
            []
        ]
    },
    {
        "id": "c80f01f0.2fe93",
        "type": "delay",
        "z": "26093b29.39d8d4",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 760,
        "y": 300,
        "wires": [
            [
                "f4433528.9a4ab8"
            ]
        ]
    },
    {
        "id": "f4433528.9a4ab8",
        "type": "function",
        "z": "26093b29.39d8d4",
        "name": "set topic",
        "func": "return {topic:msg.topic, payload:{topic:msg.topic, userID: msg.userID }};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1060,
        "y": 300,
        "wires": [
            [
                "9bc013a4.b46c"
            ]
        ]
    },
    {
        "id": "242fb7ee.ec2318",
        "type": "exec",
        "z": "5f562f66.a301e",
        "command": "flirLepton25i2c/flirLepton25i2c.exe setFfcStateToManual",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "setFfcStateToManual",
        "x": 860,
        "y": 340,
        "wires": [
            [
                "1cc9fd62.227313"
            ],
            [],
            []
        ]
    },
    {
        "id": "6abb16.fc9774ec",
        "type": "exec",
        "z": "5f562f66.a301e",
        "command": "flirLepton25i2c/flirLepton25i2c.exe reboot",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "reboot",
        "x": 530,
        "y": 340,
        "wires": [
            [
                "e1d61d76.3569b"
            ],
            [],
            []
        ]
    },
    {
        "id": "e1d61d76.3569b",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 680,
        "y": 340,
        "wires": [
            [
                "242fb7ee.ec2318"
            ]
        ]
    },
    {
        "id": "4532c4da.1b43ac",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "clear camera reset",
        "func": "flow.set('resettingCamera',false);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "x": 1550,
        "y": 340,
        "wires": []
    },
    {
        "id": "1cc9fd62.227313",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1060,
        "y": 340,
        "wires": [
            [
                "82484d70.a7df"
            ]
        ]
    },
    {
        "id": "82484d70.a7df",
        "type": "exec",
        "z": "5f562f66.a301e",
        "command": "flirLepton25i2c/flirLepton25i2c.exe performFfc",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "performFfc",
        "x": 1210,
        "y": 340,
        "wires": [
            [
                "dc342449.ddba88"
            ],
            [],
            []
        ]
    },
    {
        "id": "dc342449.ddba88",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1380,
        "y": 340,
        "wires": [
            [
                "4532c4da.1b43ac"
            ]
        ]
    },
    {
        "id": "1cd59f0.d6f2e61",
        "type": "exec",
        "z": "5f562f66.a301e",
        "command": "flirLepton25i2c/flirLepton25i2c.exe setFfcStateToManual",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "setFfcStateToManual",
        "x": 660,
        "y": 1100,
        "wires": [
            [
                "34b6f055.70dd4"
            ],
            [],
            []
        ]
    },
    {
        "id": "5fe1f713.dae2a8",
        "type": "exec",
        "z": "5f562f66.a301e",
        "command": "flirLepton25i2c/flirLepton25i2c.exe reboot",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "reboot",
        "x": 330,
        "y": 1100,
        "wires": [
            [
                "4105c23f.1181bc"
            ],
            [],
            []
        ]
    },
    {
        "id": "4105c23f.1181bc",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 480,
        "y": 1100,
        "wires": [
            [
                "1cd59f0.d6f2e61"
            ]
        ]
    },
    {
        "id": "34b6f055.70dd4",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 860,
        "y": 1100,
        "wires": [
            [
                "844f0fc.e7ab8f"
            ]
        ]
    },
    {
        "id": "844f0fc.e7ab8f",
        "type": "exec",
        "z": "5f562f66.a301e",
        "command": "flirLepton25i2c/flirLepton25i2c.exe performFfc",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "performFfc",
        "x": 1010,
        "y": 1100,
        "wires": [
            [
                "fcf0c780.08c1d8"
            ],
            [],
            []
        ]
    },
    {
        "id": "fcf0c780.08c1d8",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1180,
        "y": 1100,
        "wires": [
            [
                "fd6e82bc.30235",
                "9c6b0903.4ea858",
                "c7d887e1.faf408"
            ]
        ]
    },
    {
        "id": "89cfd52.1eb2928",
        "type": "inject",
        "z": "5f562f66.a301e",
        "name": "",
        "topic": "Init FFC",
        "payload": "",
        "payloadType": "date",
        "repeat": "120",
        "crontab": "",
        "once": true,
        "onceDelay": "60",
        "x": 160,
        "y": 1200,
        "wires": [
            [
                "1ee58b30.404be5",
                "38ff25f5.65419a"
            ]
        ]
    },
    {
        "id": "1ee58b30.404be5",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "hold capture",
        "func": "flow.set('resettingCamera',true);\nflow.set('calTime',new Date().getTime());\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 1200,
        "wires": [
            [
                "808c8caf.d76fb"
            ]
        ]
    },
    {
        "id": "2fcf61df.b03cce",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "1500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 700,
        "y": 1180,
        "wires": [
            [
                "bef6edc2.3d633",
                "c9309be.7782e68",
                "9c6b0903.4ea858"
            ]
        ]
    },
    {
        "id": "808c8caf.d76fb",
        "type": "exec",
        "z": "5f562f66.a301e",
        "command": "flirLepton25i2c/flirLepton25i2c.exe performFfc",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "performFfc",
        "x": 510,
        "y": 1200,
        "wires": [
            [
                "2fcf61df.b03cce"
            ],
            [],
            []
        ]
    },
    {
        "id": "bef6edc2.3d633",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "resume capture",
        "func": "flow.set('resettingCamera',false);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "x": 1080,
        "y": 1180,
        "wires": []
    },
    {
        "id": "c40dd8f4.63a9d8",
        "type": "link out",
        "z": "3f2da72f.995ab8",
        "name": "Get Signal Quality out",
        "links": [
            "6d0d620b.cc2c0c"
        ],
        "x": 595,
        "y": 320,
        "wires": []
    },
    {
        "id": "7bb92ce8.d547e4",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        var plotConfig = \n        {\n            trace1Title : 'Temp (C)',\n            trace1Color : '#557a95',\n            trace1GridColor : '#beceda',\n            trace2Title : 'Distance (cm)',\n            trace2Color : '#f2a31f',\n            plotLength  : 600000,\n            width   : '',\n            height  :   '500',\n            htmlId  :   'historyStripChart'\n        };\n        let historyStripChart = new StripChart(plotConfig);\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n        var mqttDevice = null;\n        var device = null;\n        var colorScale = true;\n        var enhancementLevel = 0;\n        var pgm = null;\n        var imageArray = null;\n        var programStarted = false;\n        var audioAlarm = new Audio('/audio/hold-your-horses.ogg');\n        var audioAlarmOn = false;\n        var imageDelayChanged = false;\n        var ultraSoundRangeChanged = false;\n        var offsetTempChanged = false;\n        var archiveMinTempChanged = false;\n        var archivePixelPercentChanged = false;\n        var faceRegionWidthChanged = false;\n        var faceRegionHeightChanged = false;\n        var keepAliveTimeChanged = false;\n\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            $('#imageDelayButtonId').hide();\n            $('#ultraSoundRangeButtonId').hide();\n            $('#offsetTempButtonId').hide();\n            $('#archiveMinTempButtonId').hide();\n            $('#archivePixelPercentButtonId').hide();\n            $('#faceRegionWidthButtonId').hide();\n            $('#faceRegionHeightButtonId').hide();\n            $('#keepAliveTimeButtonId').hide();\n        }\n        function onWebSocketOpen()\n        {\n            if (!programStarted)\n            {\n                programStarted = true;\n                sendWebSocketMessageObject({topic : 'getLastImage', userID : userID, 'restfulDevice': restfulDevice});\n            }\n        }\n        function onWebSocketClose()\n        {\n//            wsConnectC();\n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if (msg.mqttDevice.name == restfulDevice.name)\n                    {\n                        heartbeat();\n                        device = msg.payload;\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                        \n                    }\n                    break;\n                case 'lastImage':\n                    if (msg.userID == userID)\n                    {\n                        device = msg.payload;\n                        if (device.imageData.value != null)\n                        {\n                            $('#snapshotTimeStamp').text(new Date(device.timeStamp).toLocaleString('en-SE', { timeZone: 'Europe/Stockholm' }));\n                            pgm = JSON.parse(JSON.stringify(device.imageData.value));\n                            imageArray = pgm.imageArray;\n                            $('#sensorName').text('Sensor ' + device.name + ' @ ' + device.pixelMax.value.toString() + ' C');\n                            if (device.transpose.value == 0)\n                            {\n                                $('#flirCanvas').attr('width', '800');\n                            }\n                            else\n                            {\n                                $('#flirCanvas').attr('width', '450');\n                            }\n                            plotImage();\n                        }\n                    }\n                    break;\n                default:\n                // code block\n            }\n        }\n// Update Readings Javascript\n        function updateDmaReadings()\n        {\n            if (!imageDelayChanged)$('#imageDelayInputId').val(device.imageDelay.value);\n            if (!ultraSoundRangeChanged)$('#ultraSoundRangeInputId').val(device.ultraSoundRange.value);\n            if (!archiveMinTempChanged)$('#archiveMinTempInputId').val(device.archiveMinTemp.value);\n            if (!offsetTempChanged)$('#offsetTempInputId').val(device.offsetTemp.value);\n            if (!archivePixelPercentChanged)$('#archivePixelPercentInputId').val(device.archivePixelPercent.value);\n            if (!faceRegionWidthChanged)$('#faceRegionWidthInputId').val(device.faceRegionWidth.value);\n            if (!faceRegionHeightChanged)$('#faceRegionHeightInputId').val(device.faceRegionHeight.value);\n            if (!keepAliveTimeChanged)$('#keepAliveTimeInputId').val(device.keepAliveTime.value);\n            \n            $('#triggerModeInputId').val(device.triggerMode.value);\n            if (device.triggerMode.value == 2)\n            {\n                $('#manualTrigger').show();\n            }\n            else\n            {\n                $('#manualTrigger').hide();\n            }\n            $('#transposeInputId').val(device.transpose.value);\n            $('#gateModeInputId').val(device.gateMode.value);\n            $('#languageModeInputId').val(device.language.value);\n            $('#linkQualityId').text(device.linkQuality.value);\n            $('#signalLevelId').text(device.signalLevel.value);\n            if (device.resMode.value == 1)\n            {\n                $('#chipResolutionId').text('80x60');\n            }\n            else\n            {\n                $('#chipResolutionId').text('160x120');\n            }\n            \n            if (device.imageData.value != null)\n            {\n                $('#manualTriggerButton').text('Take Image');\n                historyStripChart.add3TracePoints(device.pixelMax.value, device.pixelMin.value, device.ultraSoundDistance.value);\n                $('#snapshotTimeStamp').text(new Date(device.timeStamp).toLocaleString('en-SE', { timeZone: 'Europe/Stockholm' }));\n                $('#sensorName').text('Sensor ' + device.name + ' @ ' + device.pixelMax.value.toString() + ' C');\n                pgm = JSON.parse(JSON.stringify(device.imageData.value));\n                imageArray = pgm.imageArray;\n                if (device.transpose.value == 0)\n                {\n                    $('#flirCanvas').attr('width', '800');\n                }\n                else\n                {\n                    $('#flirCanvas').attr('width', '450');\n                }\n                plotImage();\n                var image1dArray = [];\n                var ipixel = 0;\n                var plow = (pgm.minval - 27315) / 100;\n                var phigh = (pgm.maxval - 27315) / 100;\n                if ((device.pixelMax.alarm.value == 2) || (device.pixelMax.alarm.value == 4))\n                {\n                    if (audioAlarmOn && (device.triggerMode.value != 2) )\n                    {\n                        var playPromise = audioAlarm.play();\n                        if (playPromise !== undefined) \n                        {\n                            playPromise.then(_ => \n                            {\n                            // Automatic playback started!\n                            // Show playing UI.\n                            }).catch(error => \n                            {\n                            // Auto-play was prevented\n                            // Show paused UI.\n                            });\n                         }\n                    }\n                }\n            }\n            else\n            {\n                historyStripChart.add1TracePoints(device.ultraSoundDistance.value);\n             }\n            \n            var buttonColor = 'green';\n            var buttonTextColor = 'black';\n            var buttonText = \"Off\";\n            if (device.flipHorizontal.value > 0) \n            {\n                buttonColor = 'red';\n                buttonText = 'On';\n            }\n            $('#flipHorizontalId').css('color', buttonTextColor); \n            $('#flipHorizontalId').css('background-color', buttonColor); \n            $('#flipHorizontalId').text(buttonText); \n\n            buttonColor = 'green';\n            buttonTextColor = 'black';\n            buttonText = \"Off\";\n            if (device.flipVertical.value > 0) \n            {\n                buttonColor = 'red';\n                buttonText = 'On';\n            }\n            $('#flipVerticalId').css('color', buttonTextColor); \n            $('#flipVerticalId').css('background-color', buttonColor); \n            $('#flipVerticalId').text(buttonText); \n        }\n        function plotImage()\n        {\n            var rgb = [];\n            var plow = (pgm.minval - 27315) / 100;\n            var phigh = (pgm.maxval - 27315) / 100;\n            var pdelta = phigh - plow;\n            for (var ibox = 0; ibox < 9; ++ibox)\n            {\n                var intensity = ibox / 8.0;\n                var pbox = Math.round(((phigh - plow) * intensity + plow) * 10.0) / 10.0;\n                $('#box' + (ibox + 1).toString() + 'Label').text(pbox.toString());\n                if (enhancementLevel == -2) intensity = Math.pow(intensity, 1/3.0);\n                if (enhancementLevel == -1) intensity = Math.pow(intensity, 1/2.0);\n                if (enhancementLevel ==  0) intensity = Math.pow(intensity, 1);\n                if (enhancementLevel ==  1) intensity = Math.pow(intensity, 2.0);\n                if (enhancementLevel ==  2) intensity = Math.pow(intensity, 3.0);\n                if (colorScale)\n                {\n                    rgb = getRGB(intensity);\n                }\n                else\n                {\n                    rgb[0] = Math.floor(255 * intensity);\n                    rgb[1] = Math.floor(255 * intensity);\n                    rgb[2] = Math.floor(255 * intensity);\n                }\n                var style='width:88px;height:50px;background-color:' + 'rgb(' + rgb[0].toString() + ', ' + rgb[1].toString() + ', ' + rgb[2].toString() + ')';\n                $('#box' + (ibox + 1).toString()).attr('style',style);\n            }\n            var canvas = document.getElementById(\"flirCanvas\");\n            var canvasContext = canvas.getContext(\"2d\");\n            var tipPointer = document.getElementById(\"tipPointer\");\n            var tipPointerContext = tipPointer.getContext(\"2d\");\n            var tip = document.getElementById(\"tip\");\n            var tipContext = tip.getContext(\"2d\");\n            tipContext.font = \"30px Arial\";\n            tipContext.fillStyle = \"cyan\";\n            tipPointerContext.fillStyle = \"cyan\";\n            if (colorScale) tipContext.fillStyle = \"black\";\n            if (colorScale) tipPointerContext.fillStyle = \"black\";\n            tipContext.textAlign = \"left\";\n\n            var canvasWidth  = Number($('#flirCanvas').attr('width'));\n            var wrapperWidth = Number($('#wrapper').attr('width'));\n            var xOffsetKluge = Math.round((wrapperWidth - canvasWidth) / 2);\n            var canvasHeight = Number($('#flirCanvas').attr('height'));\n            var rectWidth  = Math.round(canvasWidth  / pgm.ncols);\n            var rectHeight = Math.round(canvasHeight / pgm.nrows);\n            canvas.onmousemove = function (e) \n            {\n                var icol = Math.floor(e.layerX / rectWidth);\n                if (icol < 0) icol = 0;\n                if (icol >= pgm.ncols) icol = pgm.ncols - 1;\n                var irow = Math.floor((canvasHeight - e.layerY) / rectHeight);\n                if (irow < 0) irow = 0;\n                if (irow >= pgm.nrows) irow = pgm.nrows - 1;\n                var temp = Math.floor(100.0 * (pdelta * imageArray[irow][icol] / 256.0 + plow)) / 100;\n\n                tipPointer.style.top = (e.layerY  - tipPointer.height / 2).toString()  + \"px\";\n                tipPointer.style.left = (xOffsetKluge + e.layerX - tipPointer.width / 2).toString() + \"px\";\n                tipPointerContext.clearRect(0, 0, tipPointer.width, tipPointer.height);\n                tipPointerContext.fillRect( 0, 0, tipPointer.width, tipPointer.height);\n\n                tip.style.top = (e.layerY - tip.height - tipPointer.height).toString()  + \"px\";\n                tip.style.left = (xOffsetKluge + e.layerX).toString() + \"px\";\n                tipContext.clearRect(0, 0, tip.width, tip.height);\n                tipContext.fillText(temp.toString() + ' C', 0, 30);\n            };\n\n            for (var irow = 0; irow < pgm.nrows; ++irow)\n            {\n                for (var icol = 0; icol < pgm.ncols; ++icol)\n                {\n                    var intensity = imageArray[irow][icol] / 256.0;\n                    if (enhancementLevel == -2) intensity = Math.pow(intensity, 1/3.0);\n                    if (enhancementLevel == -1) intensity = Math.pow(intensity, 1/2.0);\n                    if (enhancementLevel ==  0) intensity = Math.pow(intensity, 1);\n                    if (enhancementLevel ==  1) intensity = Math.pow(intensity, 2.0);\n                    if (enhancementLevel ==  2) intensity = Math.pow(intensity, 3.0);\n                    if (colorScale)\n                    {\n                        rgb = getRGB(intensity);\n                        rgb[0] = Math.floor(rgb[0]);\n                        rgb[1] = Math.floor(rgb[1]);\n                        rgb[2] = Math.floor(rgb[2]);\n                    }\n                    else\n                    {\n                        rgb[0] = Math.floor(255 * intensity);\n                        rgb[1] = Math.floor(255 * intensity);\n                        rgb[2] = Math.floor(255 * intensity);\n                    }\n                    canvasContext.fillStyle = 'rgb(' + rgb[0].toString() + ', ' + rgb[1].toString() + ', ' + rgb[2].toString() + ')';\n                    if (intensity > 0.98) \n                    {\n                        canvasContext.fillStyle='magenta';\n                        if (colorScale) canvasContext.fillStyle='white';\n                    }\n\n                    canvasContext.fillRect(icol * rectWidth, canvasHeight - rectHeight - irow * rectHeight, rectWidth, rectHeight);\n                }    \n            }\n        }\n        function convolve(inputImage,kernalType)\n        {\n            var kernal = [\n                [[ 0,   0,    0  ], [ 0,   1,   0  ], [ 0,   0,    0  ]],\n                [[ 1,   2,    1  ], [ 2,   4,   2  ], [ 1,   2,    1  ]],\n                [[ 0,  -1,    0  ], [-1,   9,  -1  ], [ 0,  -1,    0  ]]\n                ];\n            var kernalNormal = [1.0, 16.0, 5];\n            var convolveImage = [];\n            var nrows = inputImage.length;\n            var ncols = inputImage[0].length;\n            for (var irow = 0; irow < nrows; ++irow)\n            {\n                convolveImage[irow] = [];\n                for (var icol = 0; icol < ncols; ++icol)\n                {\n                    if ((irow == 0) || (irow == (nrows - 1)))\n                    {\n                        convolveImage[irow][icol] =  inputImage[irow][icol];\n                    }\n                    else\n                    {\n                        if ((icol == 0) || (icol == (ncols - 1)))\n                        {\n                            convolveImage[irow][icol] =  inputImage[irow][icol];\n                        }\n                        else\n                        {\n                            convolveImage[irow][icol] = 0;\n                            for (var ikrow = 0; ikrow < 3; ++ikrow)\n                            {\n                                for (var ikcol = 0; ikcol < 3; ++ikcol)\n                                {\n                                    convolveImage[irow][icol] = convolveImage[irow][icol] + inputImage[irow + ikrow - 1][icol + ikcol - 1] * kernal[kernalType][ikrow][ikcol];\n                                }\n                            }\n                            convolveImage[irow][icol] = Math.round(convolveImage[irow][icol] / kernalNormal[kernalType]);\n                            if (convolveImage[irow][icol] < 0)   convolveImage[irow][icol] = 0;\n                            if (convolveImage[irow][icol] > 255) convolveImage[irow][icol] = 255;\n                        }\n                    }\n                }\n            }\n            return convolveImage;\n        }\n        function mouseLeftCanvas()\n        {\n            var tip = document.getElementById(\"tip\");\n            var tipContext = tip.getContext(\"2d\");\n            tipContext.clearRect(0, 0, tip.width, tip.height);\n            var tipPointer = document.getElementById(\"tipPointer\");\n            var tipPointerContext = tipPointer.getContext(\"2d\");\n            tipPointerContext.clearRect(0, 0, tipPointer.width, tipPointer.height);\n        }\n        function getRGB(intensity)\n        {\n          var rgb = [0,0,0];\n          var rgbCoeff = [\n              [  48.6, 349.0,    5.72, -172.0],\n              [-164.0, 705.0, -667.0 ,  379.0],\n              [ 135.0, 332.0, -976.0,   536.0]];\n          var intensityStart = [0.0, 0.3176, 0.0];\n          var power = [1.0, 0.0, 0.0, 0.0];\n          for (var ii = 1; ii < 4; ++ii) power[ii] = power[ii - 1] * intensity;\n          for (var irgb = 0; irgb < 3; ++irgb)\n          {\n              if (intensity >= intensityStart[irgb])\n              {\n                  for (var ipow = 0; ipow < 4; ++ipow)\n                  {\n                      rgb[irgb] = rgb[irgb] + rgbCoeff[irgb][ipow] * power[ipow];\n                  }\n              }\n          }\n          return rgb;\n        }\n        function getRGBRainbow(intensity)\n        {\n          var rgb = [0,0,0];\n          if ( (0 <= intensity) && (intensity <= 0.25) )\n          {\n            rgb[0] = 0;\n            rgb[1] = Math.floor(255 * intensity * 4);    \n            rgb[2] = 255;\n          }\n          if ( (0.25 < intensity) && (intensity <= 0.50) )\n          {\n            rgb[0] = 0;\n            rgb[1] = 255;    \n            rgb[2] = Math.floor(255 * (0.50 - intensity) * 4);\n          }\n          if ( (0.50 < intensity) && (intensity <= 0.75) )\n          {\n            rgb[0] = Math.floor(255 * (intensity - 0.50) * 4);\n            rgb[1] = 255;    \n            rgb[2] = 0;\n          }\n          if ( (0.75 < intensity) && (intensity <= 1.0) )\n          {\n            rgb[0] = 255;\n            rgb[1] = Math.floor(255 * (1.0 - intensity) * 4);    \n            rgb[2] = 0;\n          }\n          return rgb;\n        }\n        function toggleColorScale()\n        {\n            colorScale = !colorScale;\n            if (colorScale)\n            {\n                $('#colorScaleButton').text('Color');\n            }\n            else\n            {\n                $('#colorScaleButton').text('Gray');\n            }\n            plotImage();\n        }\n        function toggleEnhancedScale(deltaEnhanced)\n        {\n            enhancementLevel = enhancementLevel + deltaEnhanced;\n            if (enhancementLevel >  2) enhancementLevel = 2;\n            if (enhancementLevel < -2) enhancementLevel = -2;\n            $('#enhancementLevel').text(enhancementLevel.toString());\n            plotImage();\n        }\n        function clearImage()\n        {\n            var canvas = document.getElementById(\"flirCanvas\");\n            var canvasContext = canvas.getContext(\"2d\");\n            var canvasWidth  = Number($('#flirCanvas').attr('width'));\n            var canvasHeight = Number($('#flirCanvas').attr('height'));\n            canvasContext.clearRect(0, 0, canvasWidth, canvasHeight);        \n            $('#snapshotTimeStamp').text('-');\n            for (var ibox = 0; ibox < 9; ++ibox)\n            {\n                var intensity = ibox / 8.0;\n                var pbox = 0.0;\n                $('#box' + (ibox + 1).toString() + 'Label').text(pbox.toString());\n            } \n            $('#pixelMaxBarPlot').hide();\n        }\n        function toggleSound()\n        {\n            audioAlarmOn = !audioAlarmOn;\n            if(audioAlarmOn)\n            {\n                $('#soundButtonId').css('color', 'black'); \n                $('#soundButtonId').css('background-color', 'green'); \n                $('#soundButtonId').text('On'); \n            }\n            else\n            {\n                $('#soundButtonId').css('color', 'black'); \n                $('#soundButtonId').css('background-color', 'grey'); \n                $('#soundButtonId').text('Off'); \n            }\n\n        }\n        function flipHorizontal()\n        {\n            if (device.flipHorizontal.value > 0)\n            {\n                device.flipHorizontal.value = 0;\n            }\n            else\n            {\n                device.flipHorizontal.value = 1;\n                \n            }\n            $('#flipHorizontalId').css('color', 'black'); \n            $('#flipHorizontalId').css('background-color', 'grey'); \n            $('#flipHorizontalId').text('?'); \n            var mqttMessage = \n            {\n                topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                payload :  device\n            };\n            sendSettingToMqtt(mqttMessage);\n        }\n        function flipVertical()\n        {\n            if (device.flipVertical.value > 0)\n            {\n                device.flipVertical.value = 0;\n            }\n            else\n            {\n                device.flipVertical.value = 1;\n                \n            }\n            $('#flipVerticalId').css('color', 'black'); \n            $('#flipVerticalId').css('background-color', 'grey'); \n            $('#flipVerticalId').text('?'); \n            var mqttMessage = \n            {\n                topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                payload :  device\n            };\n            sendSettingToMqtt(mqttMessage);\n        }\n        function setScalarValue(settingValue, attrName)\n        {\n            var settingAttr = device[attrName];\n            if ( (settingAttr.alarm.limits.lolo <= settingValue) && (settingValue <= settingAttr.alarm.limits.hihi) )\n            {\n                settingAttr.value = settingValue;\n                var mqttMessage = \n                {\n                    topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                    payload :  device\n                };\n                sendSettingToMqtt(mqttMessage);\n            } \n            else\n            {\n                acknowledgeDialog('Acknowledge', 'Error', 'Entry outside range! (' + settingAttr.alarm.limits.lolo.toString() + '-' + settingAttr.alarm.limits.hihi.toString() + ' ' + settingAttr.unit);\n            }\n        }\n        function imageDelayChange()\n        {\n            imageDelayChanged = true;\n            $('#imageDelayButtonId').show();\n        }\n        function ultraSoundRangeChange()\n        {\n            ultraSoundRangeChanged = true;\n            $('#ultraSoundRangeButtonId').show();\n        }\n        function archiveMinTempChange()\n        {\n            archiveMinTempChanged = true;\n            $('#archiveMinTempButtonId').show();\n        }\n        function offsetTempChange()\n        {\n            offsetTempChanged = true;\n            $('#offsetTempButtonId').show();\n        }\n        function archivePixelPercentChange()\n        {\n            archivePixelPercentChanged = true;\n            $('#archivePixelPercentButtonId').show();\n        }\n        function faceRegionWidthChange()\n        {\n            faceRegionWidthChanged = true;\n            $('#faceRegionWidthButtonId').show();\n        }\n        function faceRegionHeightChange()\n        {\n            faceRegionHeightChanged = true;\n            $('#faceRegionHeightButtonId').show();\n        }\n        function keepAliveTimeChange()\n        {\n            keepAliveTimeChanged = true;\n            $('#keepAliveTimeButtonId').show();\n        }\n        function imageDelay()\n        {\n            $('#imageDelayButtonId').hide();\n            if (isNaN($('#imageDelayInputId').val()))\n            {\n                imageDelayChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#imageDelayInputId').val()), 'imageDelay');\n            imageDelayChanged = false;\n        }\n        function ultraSoundRange()\n        {\n            $('#ultraSoundRangeButtonId').hide();\n            if (isNaN($('#ultraSoundRangeInputId').val()))\n            {\n                ultraSoundRangeChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#ultraSoundRangeInputId').val()), 'ultraSoundRange');\n            ultraSoundRangeChanged = false;\n        }\n        function archiveMinTemp()\n        {\n            $('#archiveMinTempButtonId').hide();\n            if (isNaN($('#archiveMinTempInputId').val()))\n            {\n                archiveMinTempChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#archiveMinTempInputId').val()), 'archiveMinTemp');\n            archiveMinTempChanged = false;\n        }\n        function offsetTemp()\n        {\n            $('#offsetTempButtonId').hide();\n            if (isNaN($('#offsetTempInputId').val()))\n            {\n                offsetTempChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#offsetTempInputId').val()), 'offsetTemp');\n            offsetTempChanged = false;\n        }\n        function archivePixelPercent()\n        {\n            $('#archivePixelPercentButtonId').hide();\n            if (isNaN($('#archivePixelPercentInputId').val()))\n            {\n                archivePixelPercentChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#archivePixelPercentInputId').val()), 'archivePixelPercent');\n            archivePixelPercentChanged = false;\n        }\n        function faceRegionWidth()\n        {\n            $('#faceRegionWidthButtonId').hide();\n            if (isNaN($('#faceRegionWidthInputId').val()))\n            {\n                faceRegionWidthChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#faceRegionWidthInputId').val()), 'faceRegionWidth');\n            faceRegionWidthChanged = false;\n        }\n        function faceRegionHeight()\n        {\n            $('#faceRegionHeightButtonId').hide();\n            if (isNaN($('#faceRegionHeightInputId').val()))\n            {\n                faceRegionHeightChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#faceRegionHeightInputId').val()), 'faceRegionHeight');\n            faceRegionHeightChanged = false;\n        }\n        function keepAliveTime()\n        {\n            $('#keepAliveTimeButtonId').hide();\n            if (isNaN($('#keepAliveTimeInputId').val()))\n            {\n                keepAliveTimeChanged = false;\n                return;\n            }\n            setScalarValue(Number($('#keepAliveTimeInputId').val()), 'keepAliveTime');\n            keepAliveTimeChanged = false;\n        }\n\n        function triggerMode()\n        {\n            if (isNaN($('#triggerModeInputId').val()))\n            {\n                 return;\n            }\n            setScalarValue(Number($('#triggerModeInputId').val()), 'triggerMode');\n        }\n        function manualTrigger()\n        {\n            if (device.manualTrigger.value == 0)\n            {\n                setScalarValue(1, 'manualTrigger');\n                $('#manualTriggerButton').text('ABORT');\n            }\n            else\n            {\n                setScalarValue(0, 'manualTrigger');\n                $('#manualTriggerButton').text('Take Image');\n            }\n        }\n        function gateMode()\n        {\n            if (isNaN($('#gateModeInputId').val()))\n            {\n                 return;\n            }\n            setScalarValue(Number($('#gateModeInputId').val()), 'gateMode');\n        }\n        function transpose()\n        {\n            if (isNaN($('#transposeInputId').val()))\n            {\n                 return;\n            }\n            setScalarValue(Number($('#transposeInputId').val()), 'transpose');\n        }\n        function languageMode()\n        {\n            if (isNaN($('#languageModeInputId').val()))\n            {\n                 return;\n            }\n            setScalarValue(Number($('#languageModeInputId').val()), 'language');\n        }\n",
        "output": "str",
        "x": 650,
        "y": 80,
        "wires": [
            [
                "51e6893d.3db098"
            ]
        ]
    },
    {
        "id": "cf60059e.7e53a8",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.stripChartWidget}}}\n{{{payload.script.global}}}\n{{{payload.script.horzbarWidget}}}\n{{{payload.script.editDevice}}}\n{{{payload.script.dangerZone}}}\n",
        "output": "str",
        "x": 640,
        "y": 240,
        "wires": [
            [
                "fd846092.bca31"
            ]
        ]
    },
    {
        "id": "fd846092.bca31",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "html.spectrogram",
        "field": "payload.html.spectrogram",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>Temperature</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <div class=\"container-fluid \" align=\"center\">\n                                <table width='800px'>\n                                    <tr>\n                                        <td align=\"center\">\n                                            <div id=\"wrapper\" width=\"800\" height=\"600\" style=\"position:relative;\"  onmouseleave=\"mouseLeftCanvas()\">\n                                                <canvas id=\"flirCanvas\" width=\"800\" height=\"600\" style=\"border:1px solid #000000;\"></canvas>\n                                                <canvas id=\"tip\" width=125 height=30 style=\"position:absolute;\"></canvas>\n                                                <canvas id=\"tipPointer\" width=10 height=10 style=\"position:absolute;\"></canvas>\n                                            </div>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </div>\n                            <div class=\"container-fluid \" align=\"center\" style='padding-top: 0px;'>\n                                <table  width='792'>\n                                    <tr>\n                                        <td width=\"88px\">\n                                            <div id='box1' style=\"width:88px;height:50px;background-color:#0000ff\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box2' style=\"width:88px;height:50px;background-color:#0088ff\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box3' style=\"width:88px;height:50px;background-color:#00ffff\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box4' style=\"width:88px;height:50px;background-color:#00ff88\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box5' style=\"width:88px;height:50px;background-color:#00ff00\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box6' style=\"width:88px;height:50px;background-color:#88ff00\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box7' style=\"width:88px;height:50px;background-color:#ffff00\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box8' style=\"width:88px;height:50px;background-color:#ff8800\"></div>\n                                        </td>\n                                        <td width=\"88px\">\n                                            <div id='box9' style=\"width:88px;height:50px;background-color:#ff0000\"></div>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box1Label'>1</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box2Label'>2</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box3Label'>3</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box4Label'>4</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box5Label'>5</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box6Label'>6</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box7Label'>7</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box8Label'>8</span>\n                                        </td>\n                                        <td align='center' width=\"88px\">\n                                            <span style='font-size: 200%;' id='box9Label'>9</span>\n                                        </td>\n                                    </tr>\n                                </table>\n                                <div class='row' style='padding-bottom: 15px;' id='manualTrigger'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                           <tr>\n                                                <td width='20%' align='left'> </td>\n                                                <td width='60%' align='center'>\n                                                    <button class='btn btn-block card-button big-text' id=\"manualTriggerButton\" onclick=\"manualTrigger()\" >Take Image</button>\n                                                </td>\n                                                <td width='20%' align='left'> </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                           <tr>\n                                                <td width='40%' align='left'>\n                                                    <span  class='card-text' id='sensorName'>Sensor xx</span>\n                                                </td>\n                                                <td width='60%' align='right'>\n                                                    <span  class='card-text' id='snapshotTimeStamp'></span>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width=\"60%\" align='left'>\n                                                    <span  class='card-text'>Color Mode</span>\n                                                </td>\n                                                <td width=\"40%\">\n                                                    <button class='btn btn-block card-button big-text' id=\"colorScaleButton\" onclick=\"toggleColorScale()\" >Color</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width=\"60%\" align='left'>\n                                                    <span  class='card-text'>Enhancement Level</span>\n                                                </td>\n                                                <td width=\"14%\" >\n                                                    <button class='btn btn-block card-button big-text' onclick=\"toggleEnhancedScale(-1)\">-</button>\n                                                </td>\n                                                <td width=\"12%px\" align='center'>\n                                                    <span  class='card-text' id=\"enhancementLevel\" >0</span>\n                                                </td>\n                                                <td width=\"14%\">\n                                                    <button class='btn btn-block card-button big-text' onclick=\"toggleEnhancedScale(1)\">+</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                   </div>\n                </div>\n",
        "output": "str",
        "x": 990,
        "y": 80,
        "wires": [
            [
                "63f10e7d.89f75"
            ]
        ]
    },
    {
        "id": "1c06ea5e.a92546",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "script.dangerZone",
        "field": "payload.script.dangerZone",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// dangerZone JavaScript\n        function restartTray()\n        {\n            optionDialog('Danger! Will Robinson, Danger!', 'Restart Tray', 'This should not be done lightly', ['Reset Tray','Cancel'], [function (){restartTrayButtonPress();}, function (){$( \"#optionDialog\" ).dialog( \"close\" );}]);\n        }\n        function restartTrayButtonPress()\n        {\n            $( \"#optionDialog\" ).dialog( \"close\" );\n            var mqttMessage = \n            {\n                topic   : restfulDevice.project + '/' +  restfulDevice.deviceType + '/' +  restfulDevice.name + '/restartTray',\n                payload :  1\n            };\n            sendSettingToMqtt(mqttMessage);\n        }\n",
        "output": "str",
        "x": 670,
        "y": 200,
        "wires": [
            [
                "cf60059e.7e53a8"
            ]
        ]
    },
    {
        "id": "b37ca0a6.4938b",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "html.dangerZone",
        "field": "payload.html.dangerZone",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='danger-card'>\n                    <div class='row'>\n                        <div class='col-md-2'>\n                        </div>\n                        <div class='col-md-8'>\n                            <p class='danger-card-title'>Danger Zone</p>\n                         </div>\n                        <div class='col-md-2'>\n                        </div>\n                    </div>\n                    <div class='danger-card-body' align=\"center\">\n                        <div class='row'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='100%' align=\"center\">\n                                        <button class='btn danger-card-button big-text' id=\"restartTrayButton\" onclick=\"restartTray()\" >Restart Tray</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 990,
        "y": 240,
        "wires": [
            [
                "450b0136.7ccbd"
            ]
        ]
    },
    {
        "id": "74981fb8.4f6d9",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "html.wifimon",
        "field": "payload.html.wifimon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>WiFi Connection</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Device Update</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/heartRed.png' id='heartBeatID' width='100px' height='100px'/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Signal Level (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='signalLevelId' >-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Link Quality (/70)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='linkQualityId' >-1</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 970,
        "y": 200,
        "wires": [
            [
                "b37ca0a6.4938b"
            ]
        ]
    },
    {
        "id": "d34771f6.a55f6",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "script.editDevice",
        "field": "payload.script.editDevice",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Edit Temp JavaScript\n       $( function() \n        {\n            $( \"#editDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    640,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Set\",\n                            click: function() {setDevice(); $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() \n                            {\n                                $( this ).dialog( \"close\" ); \n                            },\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n        function editDevice(attrName)\n        {\n            $( \"#editDeviceDialog\" ).dialog( \"option\", \"title\", \"Edit\"); \n            editedAttribute = attrName;\n            $( \"#editDeviceDialogAttribute\").html(attrName);\n\n            var attr = device[attrName];\n            $( \"#loloAlarm\").val(attr.alarm.limits.lolo);\n            $( \"#lowAlarm\").val(attr.alarm.limits.low);\n            $( \"#highAlarm\").val(attr.alarm.limits.high);\n            $( \"#hihiAlarm\").val(attr.alarm.limits.hihi);\n            $( \"#notifyName\").val(attr.alarm.notify.name);\n            $( \"#notifyNumber\").val(attr.alarm.notify.number);\n\n            $( \"#editDeviceDialog\" ).dialog( \"open\" );\n        }\n        function setDevice()\n        {\n            var attr = device[editedAttribute];\n            if (isNaN($('#loloAlarm').val()) \n                || isNaN($('#lowAlarm').val()) \n                || isNaN($('#highAlarm').val()) \n                || isNaN($('#hihiAlarm').val()))\n            {\n                acknowledgeDialog('Error', 'Entry not a number!', editedAttribute);\n                editedAttribute = '';\n                return;\n            }\n            editedAttribute = '';\n\n            attr.alarm.limits.lolo = Number($( \"#loloAlarm\").val());\n            attr.alarm.limits.low = Number($( \"#lowAlarm\").val());\n            attr.alarm.limits.high = Number($( \"#highAlarm\").val());\n            attr.alarm.limits.hihi = Number($( \"#hihiAlarm\").val());\n            attr.alarm.notify.number =  $( \"#notifyNumber\").val();\n            attr.alarm.notify.name = $( \"#notifyName\").val();\n            var mqttMessage = \n            {\n                topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                payload :  device\n            };\n            sendSettingToMqtt(mqttMessage);\n        }\n",
        "output": "str",
        "x": 660,
        "y": 160,
        "wires": [
            [
                "1c06ea5e.a92546"
            ]
        ]
    },
    {
        "id": "ac502b1d.d51818",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "html.controls",
        "field": "payload.html.controls",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>Controls</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <div class=\"container-fluid \" align=\"center\" style='padding-top: 0px;'>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%' >\n                                                    <span class='card-text' >Alarm Sound</span>\n                                                </td>\n                                                <td width='40%' align='center'>\n                                                    <button class='btn btn-block big-text' style='background-color:green;color:black' id='soundButtonId' onclick=\"toggleSound()\" >On</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%' >\n                                                    <span class='card-text' >Flip Horizontal</span>\n                                                </td>\n                                                <td width='40%' align='center'>\n                                                    <button class='btn btn-block big-text' style='background-color:grey;color:black' id='flipHorizontalId' onclick=\"flipHorizontal()\" >?</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%' >\n                                                    <span class='card-text' >Flip Vertical</span>\n                                                </td>\n                                                <td width='40%' align='center'>\n                                                    <button class='btn btn-block big-text' style='background-color:grey;color:black' id='flipVerticalId' onclick=\"flipVertical()\" >?</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Image Delay (mS)</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <input id=\"imageDelayInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"imageDelayChange()\"/>\n                                                </td>\n                                                <td width='20%'>\n                                                    <button class='btn btn-block card-button big-text' id=\"imageDelayButtonId\" onclick=\"imageDelay()\" >&#10003;</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Keep Alive (mS)</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <input id=\"keepAliveTimeInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"keepAliveTimeChange()\"/>\n                                                </td>\n                                                <td width='20%'>\n                                                    <button class='btn btn-block card-button big-text' id=\"keepAliveTimeButtonId\" onclick=\"keepAliveTime()\" >&#10003;</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >UltraSound Range (cm)</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <input id=\"ultraSoundRangeInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"ultraSoundRangeChange()\"/>\n                                                </td>\n                                                <td width='20%'>\n                                                    <button class='btn btn-block card-button big-text' id=\"ultraSoundRangeButtonId\" onclick=\"ultraSoundRange()\" >&#10003;</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Offset Temp (C)</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <input id=\"offsetTempInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"offsetTempChange()\"/>\n                                                </td>\n                                                <td width='20%'>\n                                                    <button class='btn btn-block card-button big-text' id=\"offsetTempButtonId\" onclick=\"offsetTemp()\" >&#10003;</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Archive Temp (C)</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <input id=\"archiveMinTempInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"archiveMinTempChange()\"/>\n                                                </td>\n                                                <td width='20%'>\n                                                    <button class='btn btn-block card-button big-text' id=\"archiveMinTempButtonId\" onclick=\"archiveMinTemp()\" >&#10003;</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Archive Pixel (%)</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <input id=\"archivePixelPercentInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"archivePixelPercentChange()\"/>\n                                                </td>\n                                                <td width='20%'>\n                                                    <button class='btn btn-block card-button big-text' id=\"archivePixelPercentButtonId\" onclick=\"archivePixelPercent()\" >&#10003;</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Face Region Width (px)</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <input id=\"faceRegionWidthInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"faceRegionWidthChange()\"/>\n                                                </td>\n                                                <td width='20%'>\n                                                    <button class='btn btn-block card-button big-text' id=\"faceRegionWidthButtonId\" onclick=\"faceRegionWidth()\" >&#10003;</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Face Region Height (px)</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <input id=\"faceRegionHeightInputId\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"8\" oninput=\"faceRegionHeightChange()\"/>\n                                                </td>\n                                                <td width='20%'>\n                                                    <button class='btn btn-block card-button big-text' id=\"faceRegionHeightButtonId\" onclick=\"faceRegionHeight()\" >&#10003;</button>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Display Mode</span>\n                                                </td>\n                                                <td width='40%'>\n                                                    <select class=\"custom-select big-text\"  id=\"transposeInputId\" onchange=\"transpose()\">\n                                                        <option value=\"0\">Landscape</option>\n                                                        <option value=\"1\">Portrait</option>\n                                                    </select>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Trigger Mode</span>\n                                                </td>\n                                                <td width='40%'>\n                                                    <select class=\"custom-select big-text\"  id=\"triggerModeInputId\" onchange=\"triggerMode()\" >\n                                                        <option value=\"0\">Automatic</option>\n                                                        <option value=\"1\">Periodic</option>\n                                                        <option value=\"2\">Manual</option>\n                                                    </select>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Gate Mode</span>\n                                                </td>\n                                                <td width='40%'>\n                                                    <select class=\"custom-select big-text\"  id=\"gateModeInputId\" onchange=\"gateMode()\" >\n                                                        <option value=\"0\">Off</option>\n                                                        <option value=\"1\">On</option>\n                                                    </select>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Language</span>\n                                                </td>\n                                                <td width='40%'>\n                                                    <select class=\"custom-select big-text\"  id=\"languageModeInputId\" onchange=\"languageMode()\" >\n                                                        <option value=\"0\">English</option>\n                                                        <option value=\"1\">Swedish</option>\n                                                        <option value=\"2\">Greek</option>\n                                                        <option value=\"3\">Spanish</option>\n                                                        <option value=\"4\">Italian</option>\n                                                        <option value=\"5\">German</option>\n                                                        <option value=\"6\">French</option>\n                                                    </select>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                                <div class='row' style='padding-bottom: 15px;'>\n                                    <div class=\"container-fluid \" align=\"center\">\n                                        <table  width='100%'>\n                                            <tr>\n                                                <td width='60%'>\n                                                    <span class='card-text' >Chip Resolution</span>\n                                                </td>\n                                                <td width='20%'>\n                                                    <span class='card-text' id=\"chipResolutionId\" >80x60</span>\n                                                </td>\n                                                <td width='20%'>\n                                                </td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                   </div>\n                </div>\n",
        "output": "str",
        "x": 970,
        "y": 160,
        "wires": [
            [
                "74981fb8.4f6d9"
            ]
        ]
    },
    {
        "id": "63f10e7d.89f75",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "html.history",
        "field": "payload.html.history",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- History HTML -->\n                <div class='card'>\n                    <p class='card-title'>History</p>\n                    <div class='card-body' align=\"center\">\n                        <div id=\"historyStripChart\" width=\"100%\" ></div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 970,
        "y": 120,
        "wires": [
            [
                "ac502b1d.d51818"
            ]
        ]
    },
    {
        "id": "51e6893d.3db098",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "script.stripChartWidget",
        "field": "payload.script.stripChartWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// StripChart Widget\n        class StripChart\n        {\n           constructor(plotConfig) \n            {\n                this.plotConfig = plotConfig;\n                this.plotStartTime = new Date().getTime();\n                this.layout =\n                {\n                    showlegend  : true,\n                    legend      : { x: 0, y: 1.15},\n                    height      : plotConfig.height,\n                    width       : plotConfig.width,\n                    xaxis       :\n                    {\n//                        title: 'Seconds since ' + new Date(this.plotStartTime).toLocaleString(),\n                        type: 'date'\n                    },\n                    yaxis:\n                    {\n                        title           : plotConfig.trace1Title,\n                        titlefont       : {color: plotConfig.trace1Color},\n                        tickfont        : {color:plotConfig.trace1Color},\n                        gridcolor       : plotConfig.trace1GridColor,\n                        zerolinecolor   : plotConfig.trace1GridColor,\n                        linecolor       : plotConfig.trace1GridColor,\n//                        range: [0, 2]\n        \n                    },\n                    yaxis2:\n                    {\n                        title           : plotConfig.trace2Title,\n                        titlefont       : {color: plotConfig.trace2Color},\n                        tickfont        : {color:plotConfig.trace2Color},\n                        gridcolor       : plotConfig.trace2GridColor,\n                        zerolinecolor   : plotConfig.trace2GridColor,\n                        linecolor       : plotConfig.trace2GridColor,\n                        overlaying: 'y',\n                        side: 'right',\n//                        range: [0, 2]\n                    },\n                    margin: \n                        {\n                            t: 30, //top margin\n        //                    l: 0, //left margin\n        //                    r: 0, //right margin\n        //                    b: 20 //bottom margin\n                        },\n                };\n                this.trace1 = \n                {\n                    x: [],\n                    y: [],\n                    name: 'Max Temp',\n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'markers',\n                    marker: {\n                        color: 'red',\n                        size: 10,\n                        symbol: 'circle'\n                    }\n                };\n                this.trace2 = \n                {\n                    x: [],\n                    y: [],\n                    name: 'Min Temp',\n                    yaxis: 'y1',\n                    type: 'scatter',\n                    mode: 'markers',\n                    marker: {\n                        color: 'green',\n                        size: 10,\n                        symbol: 'square'\n                    }\n                };\n                this.trace3 = \n                {\n                    x: [],\n                    y: [],\n                    name: 'Distance',\n                    yaxis: 'y2',\n                    type: 'scatter',\n                    mode: 'markers',\n                    marker: {\n                        color: this.plotConfig.trace2Color,\n                        size: 5,\n                        symbol: 'diamond'\n                    }\n                };\n            }\n            add1TracePoints(trace3Pt)\n            {\n                var now = new Date().getTime();\n                var plotBeginning = now - this.plotConfig.plotLength;\n                var removeDone = false;\n                while(!removeDone)\n                {\n                    if (this.trace1.x[0] < plotBeginning)\n                    {\n                        this.trace1.x.shift();\n                        this.trace1.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n                removeDone = false;\n                while(!removeDone)\n                {\n                    if (this.trace2.x[0] < plotBeginning)\n                    {\n                        this.trace2.x.shift();\n                        this.trace2.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n                removeDone = false;\n                while(!removeDone)\n                {\n                    if (this.trace3.x[0] < plotBeginning)\n                    {\n                        this.trace3.x.shift();\n                        this.trace3.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n        \n                this.trace3.x.push(now);\n                this.trace3.y.push(trace3Pt);\n                Plotly.newPlot(this.plotConfig.htmlId, [this.trace1, this.trace2, this.trace3], this.layout);\n            }\n            add3TracePoints(trace1Pt, trace2Pt, trace3Pt)\n            {\n                var now = new Date().getTime();\n                var plotBeginning = now - this.plotConfig.plotLength;\n                var removeDone = false;\n                while(!removeDone)\n                {\n                    if (this.trace1.x[0] < plotBeginning)\n                    {\n                        this.trace1.x.shift();\n                        this.trace1.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n                removeDone = false;\n                while(!removeDone)\n                {\n                    if (this.trace2.x[0] < plotBeginning)\n                    {\n                        this.trace2.x.shift();\n                        this.trace2.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n                removeDone = false;\n                while(!removeDone)\n                {\n                    if (this.trace3.x[0] < plotBeginning)\n                    {\n                        this.trace3.x.shift();\n                        this.trace3.y.shift();\n                    }\n                    else\n                    {\n                        removeDone = true;\n                    }\n                }\n        \n                this.trace1.x.push(now);\n                this.trace1.y.push(trace1Pt);\n                this.trace2.x.push(now);\n                this.trace2.y.push(trace2Pt);\n                this.trace3.x.push(now);\n                this.trace3.y.push(trace3Pt);\n                Plotly.newPlot(this.plotConfig.htmlId, [this.trace1, this.trace2, this.trace3], this.layout);\n            }\n        }\n",
        "output": "str",
        "x": 680,
        "y": 120,
        "wires": [
            [
                "d34771f6.a55f6"
            ]
        ]
    },
    {
        "id": "f3ff0af9.c4fdb8",
        "type": "rpi-gpio out",
        "z": "5f562f66.a301e",
        "name": "Yellow LED",
        "pin": "33",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "x": 1310,
        "y": 1400,
        "wires": []
    },
    {
        "id": "939d3b6e.eb78b8",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "set to 0",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 400,
        "y": 1440,
        "wires": [
            [
                "30a567e5.1d7ed8"
            ]
        ]
    },
    {
        "id": "1f98b300.d5ce3d",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "12",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 260,
        "y": 1440,
        "wires": [
            [
                "939d3b6e.eb78b8"
            ]
        ]
    },
    {
        "id": "3b2b856f.216a6a",
        "type": "inject",
        "z": "5f562f66.a301e",
        "name": "",
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "x": 130,
        "y": 1400,
        "wires": [
            [
                "1f98b300.d5ce3d",
                "bedf1dc7.17282"
            ]
        ]
    },
    {
        "id": "bedf1dc7.17282",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "set to 1",
        "func": "msg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 320,
        "y": 1400,
        "wires": [
            [
                "30a567e5.1d7ed8"
            ]
        ]
    },
    {
        "id": "38ff25f5.65419a",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "set to 1",
        "func": "msg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 1260,
        "wires": [
            [
                "e880ae95.bdd76"
            ]
        ]
    },
    {
        "id": "c9309be.7782e68",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "set to 0",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 700,
        "y": 1220,
        "wires": [
            [
                "e880ae95.bdd76"
            ]
        ]
    },
    {
        "id": "b4dd92bb.129c7",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Send only if good data",
        "func": "if(msg.payload.payload.imageData.value == null) return null;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1640,
        "y": 640,
        "wires": [
            [
                "cf5e2ba4.3a2458",
                "79eeb26a.e4b69c"
            ]
        ]
    },
    {
        "id": "2175bcc8.921b04",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1450,
        "y": 580,
        "wires": [
            [
                "e3701624.e0da58"
            ]
        ]
    },
    {
        "id": "dd643202.3b06d",
        "type": "http in",
        "z": "c4285970.3276d8",
        "name": "/",
        "url": "/",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 680,
        "wires": [
            [
                "1b0c5934.6f9c97"
            ]
        ]
    },
    {
        "id": "d1a29a2f.af1da8",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "Body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Body HTML -->\n    <div class='container' width=\"100%\">\n        <div class='row vert-pad' >\n            <div class='col-md-12'>\n                <a class=\"btn jumbotron-button btn-block big-text bold-text\" width='80%' href=\"/simple\" >\n                    <table width=\"100%\" alight=\"left\">\n                        <tr>\n                            <td width=\"100%\" align=\"center\">Simple</td>\n                        </tr>\n                    </table>\n                </a>\n            </div>\n        </div>\n        <div class='row vert-pad' >\n            <div class='col-md-12'>\n                <a class=\"btn jumbotron-button btn-block big-text bold-text\" width='80%' href=\"/monitor\" >\n                    <table width=\"100%\" alight=\"left\">\n                        <tr>\n                            <td width=\"100%\" align=\"center\">Monitor</td>\n                        </tr>\n                    </table>\n                </a>\n            </div>\n        </div>\n        <div class='row vert-pad' >\n            <div class='col-md-12'>\n                <a class=\"btn jumbotron-button btn-block big-text bold-text\" width='80%' href=\"/expert\" >\n                    <table width=\"100%\" alight=\"left\">\n                        <tr>\n                            <td width=\"100%\" align=\"center\">Expert</td>\n                        </tr>\n                    </table>\n                </a>\n            </div>\n        </div>\n        <div class='row vert-pad' >\n            <div class='col-md-12'>\n                <a class=\"btn jumbotron-button btn-block big-text bold-text\" width='80%' href=\"/setup\" >\n                    <table width=\"100%\" alight=\"left\">\n                        <tr>\n                            <td width=\"100%\" align=\"center\">Setup</td>\n                        </tr>\n                    </table>\n                </a>\n            </div>\n        </div>\n    </div>",
        "output": "str",
        "x": 970,
        "y": 680,
        "wires": [
            [
                "4f515a05.ac32b4"
            ]
        ]
    },
    {
        "id": "319a97e8.f017c8",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "JavaScript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        useWebSockets(false);\n        function onDocumentReady()\n        {\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n        }\n\n",
        "output": "str",
        "x": 630,
        "y": 680,
        "wires": [
            [
                "d1a29a2f.af1da8"
            ]
        ]
    },
    {
        "id": "4f515a05.ac32b4",
        "type": "subflow:6a402d92.12d7c4",
        "z": "c4285970.3276d8",
        "name": "",
        "x": 1450,
        "y": 680,
        "wires": []
    },
    {
        "id": "b0e0afdf.1c534",
        "type": "subflow:188d93e1.8dcc1c",
        "z": "c4285970.3276d8",
        "name": "",
        "x": 1430,
        "y": 920,
        "wires": []
    },
    {
        "id": "19e694ba.df69bb",
        "type": "http in",
        "z": "c4285970.3276d8",
        "name": "/simple",
        "url": "/simple",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 90,
        "y": 880,
        "wires": [
            [
                "d15ddcdf.7826a"
            ]
        ]
    },
    {
        "id": "cf5e2ba4.3a2458",
        "type": "websocket out",
        "z": "5f562f66.a301e",
        "name": "/monitor/websocket",
        "server": "e8ef1dd0.f4c9a",
        "client": "",
        "x": 1890,
        "y": 600,
        "wires": []
    },
    {
        "id": "fd2fd36.4a5dc3",
        "type": "link in",
        "z": "5f562f66.a301e",
        "name": "Hung Process Toggle in",
        "links": [
            "9067a4c6.5d4488"
        ],
        "x": 75,
        "y": 1520,
        "wires": [
            [
                "aedeaccf.3f23d"
            ]
        ]
    },
    {
        "id": "81c528f.cc489d8",
        "type": "link out",
        "z": "5f562f66.a301e",
        "name": "Hung Process Toggle out",
        "links": [
            "316e94c2.271bec"
        ],
        "x": 715,
        "y": 1520,
        "wires": []
    },
    {
        "id": "9067a4c6.5d4488",
        "type": "link out",
        "z": "5f562f66.a301e",
        "name": "Process hung out",
        "links": [
            "fd2fd36.4a5dc3",
            "98bf10f8.a2f3e"
        ],
        "x": 1075,
        "y": 400,
        "wires": []
    },
    {
        "id": "30a567e5.1d7ed8",
        "type": "link out",
        "z": "5f562f66.a301e",
        "name": "Init toggle out",
        "links": [
            "316e94c2.271bec"
        ],
        "x": 495,
        "y": 1400,
        "wires": []
    },
    {
        "id": "e880ae95.bdd76",
        "type": "link out",
        "z": "5f562f66.a301e",
        "name": "FFC Toggle Out",
        "links": [
            "316e94c2.271bec"
        ],
        "x": 535,
        "y": 1260,
        "wires": []
    },
    {
        "id": "316e94c2.271bec",
        "type": "link in",
        "z": "5f562f66.a301e",
        "name": "Yellow Led In",
        "links": [
            "30a567e5.1d7ed8",
            "81c528f.cc489d8",
            "e880ae95.bdd76",
            "a325a9ec.7e9188",
            "6ea0bbeb.ca3b54"
        ],
        "x": 1195,
        "y": 1400,
        "wires": [
            [
                "f3ff0af9.c4fdb8"
            ]
        ]
    },
    {
        "id": "81621fcc.16d71",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Check for Manual Trigger",
        "func": "if (msg.payload.manualTrigger.value == 1) return [{topic:'manualTrigger',payload:true},null];\nreturn [null,msg];",
        "outputs": 2,
        "noerr": 0,
        "x": 930,
        "y": 80,
        "wires": [
            [
                "217bb4e6.bc7ffc"
            ],
            [
                "9e954281.d9215"
            ]
        ]
    },
    {
        "id": "217bb4e6.bc7ffc",
        "type": "link out",
        "z": "5f562f66.a301e",
        "name": "Manual Trigger Out",
        "links": [
            "a59831a8.7ff9"
        ],
        "x": 1095,
        "y": 40,
        "wires": []
    },
    {
        "id": "1d2d8a83.164cc5",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Check for camera reset",
        "func": "if (flow.get('resettingCamera')) return null;\nif (flow.get('cameraInUse')) return null;\nif (flow.get('device').triggerMode.value == 0)\n{\n    if ((new Date().getTime()) > (flow.get('lastObjectDetectedTime') + flow.get('device').keepAliveTime.value)) return null;\n}\nif (flow.get('device').triggerMode.value == 1)\n{\n//    if (flow.get('device').ultraSoundDistance.value > flow.get('device').ultraSoundRange.value) return null;\n}\nflow.set('lastTriggerTime',new Date().getTime());\nflow.set('cameraInUse',true);\n\nflow.get('device').archiveData.value = 0;\nmsg.payload = \"\"\nif (flow.get('device').resMode.value == 1) msg.payload = \"flirLepton25capture/flirLepton25capture.exe\"\nif (flow.get('device').resMode.value == 2) msg.payload = \"flirLepton35capture/flirLepton35capture.exe\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 520,
        "wires": [
            [
                "de65ab7c.eced98",
                "756aff3b.081cc",
                "64edca1f.282284"
            ]
        ]
    },
    {
        "id": "c5e2b7cd.48ad58",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Try Manual Trigger Again",
        "func": "if (flow.get('device').manualTrigger.value == 1) return {topic:'manualTrigger',payload:true}\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 210,
        "y": 460,
        "wires": [
            [
                "8205de73.83b3d"
            ]
        ]
    },
    {
        "id": "8205de73.83b3d",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 400,
        "y": 460,
        "wires": [
            [
                "72aa34e4.5cf97c"
            ]
        ]
    },
    {
        "id": "98bf10f8.a2f3e",
        "type": "link in",
        "z": "5f562f66.a301e",
        "name": "Try Manual Trigger Again",
        "links": [
            "9067a4c6.5d4488",
            "9c6b0903.4ea858"
        ],
        "x": 55,
        "y": 460,
        "wires": [
            [
                "c5e2b7cd.48ad58"
            ]
        ]
    },
    {
        "id": "9c6b0903.4ea858",
        "type": "link out",
        "z": "5f562f66.a301e",
        "name": "Resuming capture",
        "links": [
            "98bf10f8.a2f3e"
        ],
        "x": 1275,
        "y": 1240,
        "wires": []
    },
    {
        "id": "2cfdcaa.a8cd536",
        "type": "inject",
        "z": "5f562f66.a301e",
        "name": "5 Hz",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "0.2",
        "crontab": "",
        "once": true,
        "onceDelay": "15",
        "x": 110,
        "y": 660,
        "wires": [
            [
                "33572f1c.c991f"
            ]
        ]
    },
    {
        "id": "33572f1c.c991f",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Programmable interval",
        "func": "var lastTriggerTime = flow.get('lastTriggerTime');\nvar now = new Date().getTime();\nif ((now - flow.get('lastHeartbeatTime')) > 5000) \n{\n    device = flow.get('device');\n    device.archiveData.value = 0;\n    device.imageData.value = null;\n    device.linkQuality.value     = global.get('linkQuality');\n    device.signalLevel.value     = global.get('signalLevel');\n    var toppy = global.get('project') + '/' + global.get('deviceTypeA') + '/' + global.get('deviceNameA') + '/reading';\n    return [null,{topic:toppy, payload:device}];\n}\nif ((now - flow.get('lastTriggerTime')) > flow.get('device').imageDelay.value) \n{\n    if(flow.get('device').triggerMode.value < 2) return [msg,null];\n}\n\nreturn [null,null];",
        "outputs": 2,
        "noerr": 0,
        "x": 340,
        "y": 660,
        "wires": [
            [
                "a851f6f5.3a80f8"
            ],
            [
                "94b1b6c9.79fca8"
            ]
        ]
    },
    {
        "id": "a179fc1c.4fe37",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Read Serial Handshake",
        "func": "var ib;\nvar dataView     = new DataView(new ArrayBuffer(4));\nvar newSettingDone = 0;\nvar cubeInit = 0;\n\nfor (ib = 0; ib < 4; ++ib)   dataView.setUint8(ib, msg.payload[0 * 4 + 3 - ib]);\ncubeInit = dataView.getInt32(0);\nfor (ib = 0; ib < 4; ++ib)   dataView.setUint8(ib, msg.payload[1 * 4 + 3 - ib]);\nnewSettingDone = dataView.getInt32(0);\n\nvar newMsg = {topic:'userData', payload:[]};\nfor (var ii = 8; ii < msg.payload.length; ++ii) newMsg.payload[ii - 8] = msg.payload[ii];\n\nif (newSettingDone > 0) \n{\n    flow.get('gate').newSetting = 0;\n}\nif(cubeInit == 1) \n{\n    flow.get('gate').noStepsToTurn = 0;\n    flow.get('gate').stayAwakeAfterRotation = 0;\n    flow.get('gate').newSetting = 1;\n}\n//node.warn('newSettingDone = ' + newSettingDone.toString());\n//node.warn('cubeInit = ' + cubeInit.toString());\n\nreturn newMsg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 1820,
        "wires": [
            [
                "da003c14.5360e",
                "716f188f.a84c68"
            ]
        ]
    },
    {
        "id": "716f188f.a84c68",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "CreateSettings",
        "func": "var bufsize = 24;\nvar buffer = new ArrayBuffer(bufsize);\nvar settingsView = new DataView(buffer);\nsettingsView.setInt32(0, flow.get('gate').newSetting, true);\nsettingsView.setInt32(4, flow.get('gate').noStepsToTurn, true);\nsettingsView.setInt32(8, flow.get('gate').motorDirection, true);\nsettingsView.setInt32(12, flow.get('gate').stepDelayuS, true);\nsettingsView.setInt32(16, flow.get('gate').stayAwakeAfterRotation, true);\nsettingsView.setInt32(20, flow.get('gate').loopDelay, true);\n\nreturn {topic:'settings',payload:Buffer.from(buffer)};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 1880,
        "wires": [
            [
                "2fe75b8.09b33a4"
            ]
        ]
    },
    {
        "id": "da003c14.5360e",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Create Readings",
        "func": "var ib;\nvar dataView     = new DataView(new ArrayBuffer(4));\n\nfor (ib = 0; ib < 4; ++ib)   dataView.setUint8(ib, msg.payload[0 * 4 + 3 - ib]);\nvar stepLocation = dataView.getInt32(0);\n\n\nreturn {topic : 'reading', payload : stepLocation};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "5315590c.3b1118",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Gate Control",
        "func": "if(msg.payload == 1) \n{\n    flow.get('gate').noStepsToTurn = 50;\n    flow.get('gate').stayAwakeAfterRotation = 1;\n    flow.get('gate').motorDirection = 0;\n    flow.get('gate').newSetting = 1;\n}\nif(msg.payload == -1) \n{\n    flow.get('gate').noStepsToTurn = 50;\n    flow.get('gate').stayAwakeAfterRotation = 1;\n    flow.get('gate').motorDirection = 1;\n    flow.get('gate').newSetting = 1;\n}\nif(msg.payload == 0) \n{\n    flow.get('gate').noStepsToTurn = 0;\n    flow.get('gate').stayAwakeAfterRotation = 0;\n    flow.get('gate').motorDirection = 0;\n    flow.get('gate').newSetting = 1;\n}\nreturn null;",
        "outputs": 0,
        "noerr": 0,
        "x": 1090,
        "y": 2220,
        "wires": []
    },
    {
        "id": "d1ecd31c.85848",
        "type": "inject",
        "z": "5f562f66.a301e",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 170,
        "y": 1760,
        "wires": [
            [
                "3eeb6d78.e660d2"
            ]
        ]
    },
    {
        "id": "3eeb6d78.e660d2",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Initialize Gate",
        "func": "var gate = \n{\n    noStepsToTurn : 0,\n    motorDirection :1,\n    stepDelayuS : 30000,\n    stayAwakeAfterRotation : 0,\n    loopDelay : 1000,\n    newSetting : 1\n}\nflow.set('gate',gate);\nflow.set('gateInUse',false);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "x": 340,
        "y": 1760,
        "wires": []
    },
    {
        "id": "8d4900c5.10495",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Gate State Open",
        "func": "if (flow.get('device').gateMode.value == 0) return null;\nif (flow.get('gateInUse')) return null;\nflow.set('gateInUse',true);\nmsg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 2200,
        "wires": [
            [
                "5315590c.3b1118",
                "10afd993.3a5476"
            ]
        ]
    },
    {
        "id": "b6cee558.861ca8",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Gate State Rest",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 820,
        "y": 2280,
        "wires": [
            [
                "5315590c.3b1118",
                "6228d70b.c12288"
            ]
        ]
    },
    {
        "id": "29ad2f9d.4ef79",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Gate State Close",
        "func": "msg.payload = -1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 830,
        "y": 2220,
        "wires": [
            [
                "5315590c.3b1118"
            ]
        ]
    },
    {
        "id": "f02718de.991428",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 640,
        "y": 2280,
        "wires": [
            [
                "b6cee558.861ca8"
            ]
        ]
    },
    {
        "id": "10afd993.3a5476",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 640,
        "y": 2220,
        "wires": [
            [
                "29ad2f9d.4ef79",
                "f02718de.991428"
            ]
        ]
    },
    {
        "id": "ada0569a.a42ec8",
        "type": "inject",
        "z": "5f562f66.a301e",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 440,
        "y": 2240,
        "wires": [
            [
                "8d4900c5.10495"
            ]
        ]
    },
    {
        "id": "6228d70b.c12288",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1020,
        "y": 2280,
        "wires": [
            [
                "7e0f54ac.ff713c",
                "b805d53b.883178"
            ]
        ]
    },
    {
        "id": "7e0f54ac.ff713c",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Set Gate State not in use",
        "func": "flow.set('gateInUse',false);\n",
        "outputs": 0,
        "noerr": 0,
        "x": 1230,
        "y": 2280,
        "wires": []
    },
    {
        "id": "a325a9ec.7e9188",
        "type": "link out",
        "z": "5f562f66.a301e",
        "name": "500mSec blink out",
        "links": [
            "316e94c2.271bec"
        ],
        "x": 715,
        "y": 1640,
        "wires": []
    },
    {
        "id": "a5fe01b6.38107",
        "type": "link in",
        "z": "5f562f66.a301e",
        "name": "500mS blink in",
        "links": [
            "de65ab7c.eced98"
        ],
        "x": 75,
        "y": 1640,
        "wires": [
            [
                "620ca605.e38238"
            ]
        ]
    },
    {
        "id": "90a53647.669d68",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "set to 1",
        "func": "msg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 2160,
        "wires": [
            [
                "852a59a8.761b68"
            ]
        ]
    },
    {
        "id": "852a59a8.761b68",
        "type": "link out",
        "z": "5f562f66.a301e",
        "name": "Gate Open to 1",
        "links": [
            "c9d85cd7.b10c5",
            "cb51837e.00842"
        ],
        "x": 555,
        "y": 2160,
        "wires": []
    },
    {
        "id": "b805d53b.883178",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "set to 0",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1180,
        "y": 2340,
        "wires": [
            [
                "d0988296.efa1"
            ]
        ]
    },
    {
        "id": "d0988296.efa1",
        "type": "link out",
        "z": "5f562f66.a301e",
        "name": "Gat Finish to 0",
        "links": [
            "c9d85cd7.b10c5",
            "cb51837e.00842"
        ],
        "x": 1275,
        "y": 2340,
        "wires": []
    },
    {
        "id": "33874547.4db68a",
        "type": "exec",
        "z": "5f562f66.a301e",
        "command": "espeak ",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "espeak Please Enter",
        "x": 1140,
        "y": 1960,
        "wires": [
            [
                "afb10d64.6b48d"
            ],
            [],
            []
        ]
    },
    {
        "id": "f860f23f.a6e73",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Body Temp Speak",
        "func": "if (flow.get('device').gateMode.value == 0) \n{\n    if (flow.get('gateInUse')) return null;\n    flow.set('gateInUse',true);\n}\nvar languageFlag = flow.get('languageFlags')[flow.get('device').language.value];\nmsg.payload = languageFlag + ' \"' + flow.get('device').bodyTemp.value.toString() + '\" --stdout | aplay'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 1960,
        "wires": [
            [
                "50c51b36.f4cde4"
            ]
        ]
    },
    {
        "id": "50c51b36.f4cde4",
        "type": "exec",
        "z": "5f562f66.a301e",
        "command": "espeak",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "espeak Body Temp",
        "x": 670,
        "y": 1960,
        "wires": [
            [
                "d30c7b04.5bf7d8"
            ],
            [],
            []
        ]
    },
    {
        "id": "e904ee06.b15af",
        "type": "link in",
        "z": "5f562f66.a301e",
        "name": "Speak Out",
        "links": [
            "863d7a9.ab20888"
        ],
        "x": 75,
        "y": 2180,
        "wires": [
            [
                "514d03ca.0eae7c"
            ]
        ]
    },
    {
        "id": "863d7a9.ab20888",
        "type": "link out",
        "z": "5f562f66.a301e",
        "name": "Alarm Action out",
        "links": [
            "e904ee06.b15af"
        ],
        "x": 975,
        "y": 620,
        "wires": []
    },
    {
        "id": "73e006b1.cf7528",
        "type": "rpi-gpio out",
        "z": "5f562f66.a301e",
        "name": "Red LED",
        "pin": "37",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "x": 1300,
        "y": 1460,
        "wires": []
    },
    {
        "id": "15e0e620.bb96fa",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Set alarm burst",
        "func": "var burstCount = context.get('burstCount');\nif (burstCount == undefined) burstCount = 0;\nif (msg.topic == 'tooHotAlarm') burstCount = 0;\n++burstCount;\ncontext.set('burstCount',burstCount)\nif (burstCount < 20) return msg;\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 440,
        "y": 2480,
        "wires": [
            [
                "5649f4af.4a03bc",
                "b70b66ec.44cdf8"
            ]
        ]
    },
    {
        "id": "14f934e6.ded55b",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "set to 1",
        "func": "msg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 800,
        "y": 2480,
        "wires": [
            [
                "f4c1fc1.3b91"
            ]
        ]
    },
    {
        "id": "5649f4af.4a03bc",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "200",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 630,
        "y": 2520,
        "wires": [
            [
                "94bf1fac.8b3e3"
            ]
        ]
    },
    {
        "id": "94bf1fac.8b3e3",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "set to 0",
        "func": "return {topic:'redLed',payload:0};",
        "outputs": 1,
        "noerr": 0,
        "x": 800,
        "y": 2520,
        "wires": [
            [
                "15e0e620.bb96fa",
                "f4c1fc1.3b91"
            ]
        ]
    },
    {
        "id": "b70b66ec.44cdf8",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 630,
        "y": 2480,
        "wires": [
            [
                "14f934e6.ded55b"
            ]
        ]
    },
    {
        "id": "19963a75.2b0f46",
        "type": "rpi-gpio out",
        "z": "5f562f66.a301e",
        "name": "Blue LED",
        "pin": "35",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "x": 1300,
        "y": 1520,
        "wires": []
    },
    {
        "id": "f4c1fc1.3b91",
        "type": "link out",
        "z": "5f562f66.a301e",
        "name": "Red alarm Burst Out",
        "links": [
            "7af84ca8.ba5584"
        ],
        "x": 955,
        "y": 2480,
        "wires": []
    },
    {
        "id": "7af84ca8.ba5584",
        "type": "link in",
        "z": "5f562f66.a301e",
        "name": "Red LED In",
        "links": [
            "f4c1fc1.3b91",
            "d242b085.fde9e",
            "6ea0bbeb.ca3b54"
        ],
        "x": 1195,
        "y": 1460,
        "wires": [
            [
                "73e006b1.cf7528"
            ]
        ]
    },
    {
        "id": "cb51837e.00842",
        "type": "link in",
        "z": "5f562f66.a301e",
        "name": "Blue LED In",
        "links": [
            "852a59a8.761b68",
            "d0988296.efa1",
            "6ea0bbeb.ca3b54",
            "588676f8.07e648"
        ],
        "x": 1195,
        "y": 1520,
        "wires": [
            [
                "19963a75.2b0f46"
            ]
        ]
    },
    {
        "id": "514d03ca.0eae7c",
        "type": "switch",
        "z": "5f562f66.a301e",
        "name": "Alarm Action",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 190,
        "y": 2180,
        "wires": [
            [
                "1f55c9e4.6259b6"
            ],
            [
                "8d4900c5.10495",
                "90a53647.669d68",
                "3d858b79.d58bd4"
            ],
            [
                "15e0e620.bb96fa"
            ],
            [
                "1f55c9e4.6259b6"
            ]
        ]
    },
    {
        "id": "fc88ddcf.296c3",
        "type": "exec",
        "z": "5f562f66.a301e",
        "command": "espeak -v sv \"Hej då\" --stdout | aplay",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "espeak Too high",
        "x": 1100,
        "y": 2420,
        "wires": [
            [
                "4462442a.61e38c"
            ],
            [],
            []
        ]
    },
    {
        "id": "e7abb274.d325d",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Body Temp Speak",
        "func": "if (flow.get('gateInUse')) return null;\nflow.set('gateInUse',true);\nvar languageFlag = flow.get('languageFlags')[flow.get('device').language.value];\nmsg.payload = languageFlag + ' \"' + flow.get('device').bodyTemp.value.toString() + '\" --stdout | aplay'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 2420,
        "wires": [
            [
                "9300e65b.1644d8"
            ]
        ]
    },
    {
        "id": "9300e65b.1644d8",
        "type": "exec",
        "z": "5f562f66.a301e",
        "command": "espeak -v sv ",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "espeak Body Temp",
        "x": 650,
        "y": 2420,
        "wires": [
            [
                "d560e222.c91c8"
            ],
            [],
            []
        ]
    },
    {
        "id": "89ab897e.bf7b28",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "set to 0",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 720,
        "y": 2600,
        "wires": [
            [
                "d242b085.fde9e"
            ]
        ]
    },
    {
        "id": "1f55c9e4.6259b6",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "set to 1",
        "func": "msg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 420,
        "y": 2580,
        "wires": [
            [
                "165fcf02.2d29f1",
                "d242b085.fde9e"
            ]
        ]
    },
    {
        "id": "165fcf02.2d29f1",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 570,
        "y": 2600,
        "wires": [
            [
                "89ab897e.bf7b28"
            ]
        ]
    },
    {
        "id": "d242b085.fde9e",
        "type": "link out",
        "z": "5f562f66.a301e",
        "name": "notInRangeBlink",
        "links": [
            "7af84ca8.ba5584"
        ],
        "x": 815,
        "y": 2580,
        "wires": []
    },
    {
        "id": "4462442a.61e38c",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Set Gate State not in use",
        "func": "flow.set('gateInUse',false);\n",
        "outputs": 0,
        "noerr": 0,
        "x": 1330,
        "y": 2400,
        "wires": []
    },
    {
        "id": "d30c7b04.5bf7d8",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Body Temp Speak Message",
        "func": "var languageFlag = flow.get('languageFlags')[flow.get('device').language.value];\nmsg.payload = languageFlag + ' \"' + flow.get('voiceWarnings')[flow.get('device').autoModeAction.value][flow.get('device').language.value] + '\" --stdout | aplay'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 900,
        "y": 1960,
        "wires": [
            [
                "33874547.4db68a"
            ]
        ]
    },
    {
        "id": "d560e222.c91c8",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Body Temp Speak Message",
        "func": "var languageFlag = flow.get('languageFlags')[flow.get('device').language.value];\nmsg.payload = languageFlag + ' \"' + flow.get('voiceWarnings')[flow.get('device').autoModeAction.value][flow.get('device').language.value] + '\" --stdout | aplay'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 880,
        "y": 2420,
        "wires": [
            [
                "fc88ddcf.296c3"
            ]
        ]
    },
    {
        "id": "afb10d64.6b48d",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Set Gate State not in use",
        "func": "if (flow.get('device').gateMode.value == 1) return null;\nflow.set('gateInUse',false);\nmsg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1370,
        "y": 1940,
        "wires": [
            [
                "588676f8.07e648"
            ]
        ]
    },
    {
        "id": "cb2332f8.29c65",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "set to 1",
        "func": "msg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1120,
        "y": 1000,
        "wires": [
            [
                "6ea0bbeb.ca3b54"
            ]
        ]
    },
    {
        "id": "c7d887e1.faf408",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "set to 0",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1320,
        "y": 1040,
        "wires": [
            [
                "6ea0bbeb.ca3b54"
            ]
        ]
    },
    {
        "id": "6ea0bbeb.ca3b54",
        "type": "link out",
        "z": "5f562f66.a301e",
        "name": "Reset Out",
        "links": [
            "316e94c2.271bec",
            "7af84ca8.ba5584",
            "cb51837e.00842"
        ],
        "x": 1415,
        "y": 1000,
        "wires": []
    },
    {
        "id": "de65ab7c.eced98",
        "type": "link out",
        "z": "5f562f66.a301e",
        "name": "Camera Trig Out",
        "links": [
            "a5fe01b6.38107"
        ],
        "x": 555,
        "y": 460,
        "wires": []
    },
    {
        "id": "3d858b79.d58bd4",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 430,
        "y": 2120,
        "wires": [
            [
                "a193f30.a33811"
            ]
        ]
    },
    {
        "id": "a193f30.a33811",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "set to 0",
        "func": "msg.payload = 0;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 2120,
        "wires": [
            [
                "852a59a8.761b68"
            ]
        ]
    },
    {
        "id": "72aa34e4.5cf97c",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 170,
        "y": 520,
        "wires": [
            [
                "1d2d8a83.164cc5"
            ]
        ]
    },
    {
        "id": "2cfe9e64.64e0a2",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Reset Delay",
        "func": "return [{topic:\"reset\",reset:1},{topic:\"setCameraAvailable\",payload:1}];",
        "outputs": 2,
        "noerr": 0,
        "x": 890,
        "y": 520,
        "wires": [
            [
                "64edca1f.282284"
            ],
            [
                "bc2a5ab6.dd10a8"
            ]
        ]
    },
    {
        "id": "aedeaccf.3f23d",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Set alarm burst",
        "func": "var burstCount = context.get('burstCount');\nif (burstCount == undefined) burstCount = 0;\nif (msg.topic == 'killProcess') burstCount = 0;\n++burstCount;\ncontext.set('burstCount',burstCount)\nif (burstCount < 5) return msg;\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 220,
        "y": 1520,
        "wires": [
            [
                "808ee76f.0ad4e8",
                "dc2f8493.cd12a8"
            ]
        ]
    },
    {
        "id": "9915e189.c1453",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "set to 1",
        "func": "msg.payload = 1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 1520,
        "wires": [
            [
                "81c528f.cc489d8"
            ]
        ]
    },
    {
        "id": "808ee76f.0ad4e8",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "200",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 410,
        "y": 1560,
        "wires": [
            [
                "1575881a.c78e98"
            ]
        ]
    },
    {
        "id": "1575881a.c78e98",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "set to 0",
        "func": "return {topic:'redLed',payload:0};",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 1560,
        "wires": [
            [
                "aedeaccf.3f23d",
                "81c528f.cc489d8"
            ]
        ]
    },
    {
        "id": "dc2f8493.cd12a8",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 410,
        "y": 1520,
        "wires": [
            [
                "9915e189.c1453"
            ]
        ]
    },
    {
        "id": "c6e267ff.f4aa18",
        "type": "subflow:188d93e1.8dcc1c",
        "z": "c4285970.3276d8",
        "name": "",
        "x": 1430,
        "y": 480,
        "wires": []
    },
    {
        "id": "9b132c39.ddce9",
        "type": "http in",
        "z": "c4285970.3276d8",
        "name": "/monitor",
        "url": "/monitor",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 440,
        "wires": [
            [
                "5460f013.cec92"
            ]
        ]
    },
    {
        "id": "5460f013.cec92",
        "type": "function",
        "z": "c4285970.3276d8",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = global.get('deviceNameA')\nmsg.payload['script']['deviceType'] = global.get('deviceTypeA');\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 440,
        "wires": [
            [
                "ba8ea620.747248"
            ]
        ]
    },
    {
        "id": "79eeb26a.e4b69c",
        "type": "websocket out",
        "z": "5f562f66.a301e",
        "name": "/simple/websocket",
        "server": "630fe450.88c6dc",
        "client": "",
        "x": 1890,
        "y": 660,
        "wires": []
    },
    {
        "id": "2a510112.c97c8e",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Set Camera Available",
        "func": "flow.set('cameraInUse',false);\nreturn null;",
        "outputs": 0,
        "noerr": 0,
        "x": 1300,
        "y": 520,
        "wires": []
    },
    {
        "id": "bc2a5ab6.dd10a8",
        "type": "delay",
        "z": "5f562f66.a301e",
        "name": "",
        "pauseType": "delay",
        "timeout": "200",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1090,
        "y": 520,
        "wires": [
            [
                "2a510112.c97c8e"
            ]
        ]
    },
    {
        "id": "ffc2fa3d.3054d8",
        "type": "link in",
        "z": "5f562f66.a301e",
        "name": "Reset In",
        "links": [
            "7079fa00.acfb14"
        ],
        "x": 55,
        "y": 1000,
        "wires": [
            [
                "cb2332f8.29c65",
                "bf3bbeb6.27c5f"
            ]
        ]
    },
    {
        "id": "7079fa00.acfb14",
        "type": "link out",
        "z": "5f562f66.a301e",
        "name": "Reset Out",
        "links": [
            "ffc2fa3d.3054d8"
        ],
        "x": 635,
        "y": 640,
        "wires": []
    },
    {
        "id": "588676f8.07e648",
        "type": "link out",
        "z": "5f562f66.a301e",
        "name": "Gate in use out",
        "links": [
            "cb51837e.00842"
        ],
        "x": 1515,
        "y": 1940,
        "wires": []
    },
    {
        "id": "7ff0de00.271384",
        "type": "link in",
        "z": "5f562f66.a301e",
        "name": "Init System In",
        "links": [
            "282435c4.bd84ba"
        ],
        "x": 255,
        "y": 300,
        "wires": [
            [
                "2635280b.22f548",
                "3994b851.11f2f8"
            ]
        ]
    },
    {
        "id": "d10b4167.c71e7",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Re Init system",
        "func": "node.warn(msg);\nnode.warn(\"Reinitializing system\");\nreturn {topic:'init',payload:1};",
        "outputs": 1,
        "noerr": 0,
        "x": 1280,
        "y": 460,
        "wires": [
            [
                "282435c4.bd84ba"
            ]
        ]
    },
    {
        "id": "282435c4.bd84ba",
        "type": "link out",
        "z": "5f562f66.a301e",
        "name": "Re init system out",
        "links": [
            "7ff0de00.271384"
        ],
        "x": 1395,
        "y": 460,
        "wires": []
    },
    {
        "id": "88dd1a6c.d8ae68",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n        var mqttDevice = null;\n        var device = null;\n        var colorScale = true;\n        var enhancementLevel = 0;\n        var pgm = null;\n        var lastUpdate = new Date().getTime();\n        var maxDisplayTime = 10000;\n        var imageArray =  null;\n        var language = 0;\n        var warnings = [\n            [\"Person outside range\"     ,\"Person utanför räckhåll\"    ,\"Άτομο εκτός εμβέλειας\"   ,\"Persona fuera del alcance\"  ,\"Persona fuori portata\"  ,\"Person außerhalb der Reichweite\"  ,\"Personne hors de portée\"],\n            [\"Normal Temperature\"       ,\"Normal temperatur\"          ,\"Κανονική θερμοκρασία\"    ,\"Temperatura normal\"         ,\"Temperatura normale\"    ,\"Normale Temperatur\"               ,\"Température normale\"],\n            [\"High Temperature\"         ,\"Hög temperatur\"             ,\"Υψηλή θερμοκρασία\"       ,\"Alta temperatura\"           ,\"Alta temperatura\"       ,\"Hohe Temperatur\"                  ,\"Haute température\"],\n            [\"Temperature outside range\",\"Temperatur utanför räckhåll\",\"Θερμοκρασία εκτός εύρους\",\"Temperatura fuera del rango\",\"Temperatura fuori range\",\"Temperatur außerhalb des Bereichs\",\"Température hors plage\"] ];\n        var instructions = [\n            [\"Take off your glasses.\",\"Please stand straight.\",\"Align your face in the circle.\"],\n            [\"Ta av dig dina glasögon.\",\"Vänligen stå rakt.\",\"Rikta in ditt ansikte i cirkeln.\"],\n            [\"Βγάλτε τα γυαλιά σας.\",\"Παρακαλώ σταθείτε ευθεία.\",\"Ευθυγραμμίστε το πρόσωπό σας στον κύκλο.\"],\n            [\"Quítate las gafas.\",\"Por favor, párese derecho.\",\"Alinea tu cara en el círculo.\"],\n            [\"Togliti gli occhiali.\",\"Per favore, stai dritto.\",\"Allinea il tuo viso nel cerchio.\"],\n            [\"Nimm deine Brille ab.\",\"Bitte stehen Sie gerade.\",\"Richten Sie Ihr Gesicht im Kreis aus.\"],\n            [\"Enlève tes lunettes.\",\"Veuillez vous tenir droit.\",\"Alignez votre visage dans le cercle.\"]];      \n\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            $('#tempLegend').hide();\n            $('#tempBarPlot').hide();\n            $('#instruction1Id').hide();\n            $('#instruction2Id').hide();\n            $('#instruction3Id').hide();\n            $('#tempComment').hide();\n            setInterval(function()\n            {\n                if ((new Date().getTime() - lastUpdate) > maxDisplayTime)\n                {\n                    $('#tempComment').hide();\n                    clearImage();\n                    $('#tempLegend').hide();\n                    $('#tempBarPlot').hide();\n                    $('#instruction1Id').hide();\n                    $('#instruction2Id').hide();\n                    $('#instruction3Id').hide();\n                }\n            }, 1000);\n\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            wsConnectC();\n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if (msg.mqttDevice.name == restfulDevice.name)\n                    {\n                        heartbeat();\n                        device = msg.payload;\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                        \n                    }\n                    break;\n                default:\n                // code block\n            }\n        }\n// Update Readings Javascript\n        function updateDmaReadings()\n        {\n            if (device.imageData.value != null)\n            {\n                var style = 'font-size:200%; font-weight:200; color:#ffff00;';\n                if ((device.triggerMode.value == 0) || (device.triggerMode.value == 1))\n                {\n                    $('#instruction1Id').text(instructions[device.language.value][0]);\n                    $('#instruction2Id').text(instructions[device.language.value][1]);\n                    $('#instruction3Id').text(instructions[device.language.value][2]);\n                    $('#instruction1Id').show();\n                    $('#instruction2Id').show();\n                    $('#instruction3Id').show();\n                    $('#tempComment').show();\n\n                    if (device.autoModeAction.value == 0)\n                    {\n                        style = 'font-size:200%; font-weight:200; color:#ff00ff;';\n                         $('#tempComment').attr(\"style\", style);\n                        $('#tempComment').text(warnings[device.autoModeAction.value][device.language.value]);\n                    }\n                    if (device.autoModeAction.value == 1)\n                    {\n                        style = 'font-size:200%; font-weight:200; background-color:#00ff00;color:black;';\n                        $('#tempComment').attr(\"style\", style);\n                        $('#tempComment').text(warnings[device.autoModeAction.value][device.language.value]);\n                    }\n                    if (device.autoModeAction.value == 2)\n                    {\n                        style = 'font-size:200%; font-weight:200; background-color:#ff0000;color:black;';\n                        $('#tempComment').attr(\"style\", style);\n                        $('#tempComment').text(warnings[device.autoModeAction.value][device.language.value]);\n                    }\n                    if (device.autoModeAction.value == 3)\n                    {\n                        style = 'font-size:200%; font-weight:200; color:#ff00ff;';\n                        $('#tempComment').attr(\"style\", style);\n                        $('#tempComment').text(warnings[device.autoModeAction.value][device.language.value]);\n                    }\n                }\n                else\n                {\n                    $('#tempComment').attr(\"style\", style);\n                    $('#tempComment').text(\"Surface Temperature\");\n                }\n                lastUpdate = new Date().getTime();\n            }\n            if (device.imageData.value != null)\n            {\n                pgm = JSON.parse(JSON.stringify(device.imageData.value));\n                imageArray = pgm.imageArray;\n                plotImage();\n                $('#tempBarPlot').show();\n                var tempBarConfig = \n                    {\n                        lolo            : device.bodyTemp.alarm.limits.lolo, \n                        low             : device.bodyTemp.alarm.limits.low, \n                        high            : device.bodyTemp.alarm.limits.high, \n                        hihi            : device.bodyTemp.alarm.limits.hihi, \n                        value           : device.bodyTemp.value, \n                        unit            : device.bodyTemp.unit, \n                        textsize        : 20,\n                        label           : 'temp', \n                        lowColor        : '#0000ff', \n                        mediumColor     : '#00ff00',\n                        highColor       : '#ff0000', \n                        backgroundColor : '#000000', \n                        labelColor      : '#ffffff', \n                        gridColor       : '#000000',\n                        height          : 125, \n                        htmlId          : 'tempBarPlot'\n                    };\n                if (device.autoModeAction.value == 0)\n                {\n                    tempBarConfig.lowColor = '#000000';\n                    tempBarConfig.mediumColor = '#000000';\n                    tempBarConfig.highColor = '#000000';\n                    tempBarConfig.labelColor = '#000000';\n                }\n                setHorzBarWidget(tempBarConfig);\n            }\n        }\n        function plotImage()\n        {\n            $('#tempLegend').show();\n            var rgb = [];\n            var plow = (pgm.minval - 27315) / 100;\n            var phigh = (pgm.maxval - 27315) / 100;\n            var pdelta = phigh - plow;\n            var canvas = document.getElementById(\"flirCanvas\");\n            var canvasContext = canvas.getContext(\"2d\");\n\n            var canvasWidth  = Number($('#flirCanvas').attr('width'));\n            var canvasHeight = Number($('#flirCanvas').attr('height'));\n            var rectWidth  = Math.round(canvasWidth / pgm.ncols);\n            var rectHeight =  Math.round(canvasHeight / pgm.nrows);\n\n            for (var irow = 0; irow < pgm.nrows; ++irow)\n            {\n                for (var icol = 0; icol < pgm.ncols; ++icol)\n                {\n                    var intensity = imageArray[irow][icol] / 256.0;\n                    if (enhancementLevel == -2) intensity = Math.pow(intensity, 1/3.0);\n                    if (enhancementLevel == -1) intensity = Math.pow(intensity, 1/2.0);\n                    if (enhancementLevel ==  0) intensity = Math.pow(intensity, 1);\n                    if (enhancementLevel ==  1) intensity = Math.pow(intensity, 2.0);\n                    if (enhancementLevel ==  2) intensity = Math.pow(intensity, 3.0);\n                    if (colorScale)\n                    {\n                        rgb = getRGB(intensity);\n                        rgb[0] = Math.floor(rgb[0]);\n                        rgb[1] = Math.floor(rgb[1]);\n                        rgb[2] = Math.floor(rgb[2]);\n                    }\n                    else\n                    {\n                        rgb[0] = Math.floor(255 * intensity);\n                        rgb[1] = Math.floor(255 * intensity);\n                        rgb[2] = Math.floor(255 * intensity);\n                    }\n                    canvasContext.fillStyle = 'rgb(' + rgb[0].toString() + ', ' + rgb[1].toString() + ', ' + rgb[2].toString() + ')';\n                    var wx = Math.round(icol * canvasWidth / pgm.ncols);\n                    var hy =  Math.round(canvasHeight - (1 + irow) * canvasHeight / pgm.nrows) ;\n                    canvasContext.fillRect(wx, hy, rectWidth, rectHeight);\n                }    \n            }\n            if ((device.triggerMode.value == 0) || (device.triggerMode.value == 1)) \n            {\n                \n                canvasContext.strokeStyle = 'black';\n                var ellipseWidth =  Math.round(device.faceRegionWidth.value * canvasWidth / pgm.ncols);\n                var ellipseHeight =  Math.round(device.faceRegionHeight.value * canvasHeight / pgm.nrows);\n                \n                drawEllipse(canvasContext, (canvasWidth - ellipseWidth) / 2, (canvasHeight -  ellipseHeight)/ 2, ellipseWidth, ellipseHeight);\n                drawEllipse(canvasContext, (canvasWidth - ellipseWidth - 3) / 2, (canvasHeight -  ellipseHeight - 3)/ 2, ellipseWidth + 3, ellipseHeight + 3);\n                drawEllipse(canvasContext, (canvasWidth - ellipseWidth - 6) / 2, (canvasHeight -  ellipseHeight - 6)/ 2, ellipseWidth + 6, ellipseHeight + 6);\n               \n                canvasContext.strokeStyle = '#00ff00'\n                if (device.autoModeAction.value == 0) canvasContext.strokeStyle = '#ff0000';\n                var faceEllipseWidth  =  device.faceLocation.value[1][1] -  device.faceLocation.value[0][1];\n                var faceEllipseHeight =  device.faceLocation.value[1][0] -  device.faceLocation.value[0][0] ;\n                var faceEllipseCol    = (device.faceLocation.value[1][1] +  device.faceLocation.value[0][1]) / 2 ;\n                var faceEllipseRow    = (device.faceLocation.value[1][0] +  device.faceLocation.value[0][0]) / 2 ;\n                faceEllipseCol = faceEllipseCol - faceEllipseWidth  / 2.0;\n                faceEllipseRow = pgm.nrows - (faceEllipseRow + faceEllipseHeight / 2.0);\n                faceEllipseWidth  = Math.round( faceEllipseWidth  * canvasWidth  / pgm.ncols);\n                faceEllipseHeight = Math.round( faceEllipseHeight * canvasHeight / pgm.nrows);\n                faceEllipseCol    = Math.round( faceEllipseCol    * canvasWidth  / pgm.ncols);\n                faceEllipseRow    = Math.round( faceEllipseRow    * canvasHeight / pgm.nrows);\n                drawEllipse(canvasContext, faceEllipseCol, faceEllipseRow, faceEllipseWidth, faceEllipseHeight);\n\n\n                if (device.autoModeAction.value > 0)\n                {\n                    canvasContext.fillStyle = '#000000';\n                    for (var ipt = 0; ipt < 2; ++ipt)\n                    {\n                        var wx =  Math.round(device.eyeLocation.value[ipt][1] * canvasWidth / pgm.ncols);\n                        var hy =  Math.round(canvasHeight - (1 + device.eyeLocation.value[ipt][0]) * canvasHeight / pgm.nrows) ;\n//                        canvasContext.fillRect(wx - rectWidth, hy - rectHeight, 3 * rectWidth, 3 * rectHeight);\n                        canvasContext.strokeStyle = '#000000'\n                        canvasContext.beginPath();\n                        canvasContext.arc(wx + 0.5 * rectWidth, hy + 0.5 * rectHeight,  rectWidth, 0, 6.2831854);\n                        canvasContext.stroke();\n                    }\n                }\n\n            }\n        }\n        function getRGB(intensity)\n        {\n          var rgb = [0,0,0];\n//plasma\n          var rgbCoeff = [\n              [  48.6, 349.0,    5.72, -172.0],\n              [-164.0, 705.0, -667.0 ,  379.0],\n              [ 135.0, 332.0, -976.0,   536.0]];\n          var intensityStart = [0.0, 0.3176, 0.0];\n//viridis\n/*\n          var rgbCoeff = [\n              [  72.7, 161.0, -928.0,  962.0],\n              [-0.316, 334.0,  -62.8 , -35.3],\n              [  89.3, 296.0, -379.0,  -11.5]];\n          var intensityStart = [0.0, 0.0117, 0.0];\n*/\n//inferno\n/* \n          var rgbCoeff = [\n              [   0,0,  343.0,  264.0, -376.0],\n              [   5.0,  -69.7,  320.0,   -1.1],\n              [   0.0, 1193.0,-2957.0, 1939.0]];\n          var intensityStart = [0.0, 0.0, 0.0];\n*/\n          var power = [1.0, 0.0, 0.0, 0.0];\n          for (var ii = 1; ii < 4; ++ii) power[ii] = power[ii - 1] * intensity;\n          for (var irgb = 0; irgb < 3; ++irgb)\n          {\n              if (intensity >= intensityStart[irgb])\n              {\n                  for (var ipow = 0; ipow < 4; ++ipow)\n                  {\n                      rgb[irgb] = rgb[irgb] + rgbCoeff[irgb][ipow] * power[ipow];\n                  }\n              }\n              if (rgb[irgb] <   0) rgb[irgb] =   0;\n              if (rgb[irgb] > 255) rgb[irgb] = 255;\n         }\n          return rgb;\n        }\n        function getRGBRainBow(intensity)\n        {\n          var rgb = [0,0,0];\n          if ( (0 <= intensity) && (intensity <= 0.25) )\n          {\n            rgb[0] = 0;\n            rgb[1] = Math.floor(255 * intensity * 4);    \n            rgb[2] = 255;\n          }\n          if ( (0.25 < intensity) && (intensity <= 0.50) )\n          {\n            rgb[0] = 0;\n            rgb[1] = 255;    \n            rgb[2] = Math.floor(255 * (0.50 - intensity) * 4);\n          }\n          if ( (0.50 < intensity) && (intensity <= 0.75) )\n          {\n            rgb[0] = Math.floor(255 * (intensity - 0.50) * 4);\n            rgb[1] = 255;    \n            rgb[2] = 0;\n          }\n          if ( (0.75 < intensity) && (intensity <= 1.0) )\n          {\n            rgb[0] = 255;\n            rgb[1] = Math.floor(255 * (1.0 - intensity) * 4);    \n            rgb[2] = 0;\n          }\n          return rgb;\n        }\n        function clearImage()\n        {\n            var canvas = document.getElementById(\"flirCanvas\");\n            var canvasContext = canvas.getContext(\"2d\");\n            var canvasWidth  = Number($('#flirCanvas').attr('width'));\n            var canvasHeight = Number($('#flirCanvas').attr('height'));\n            canvasContext.clearRect(0, 0, canvasWidth, canvasHeight);        \n            for (var ibox = 0; ibox < 9; ++ibox)\n            {\n                var pbox = 0.0;\n                $('#box' + (ibox + 1).toString() + 'Label').text(' ');\n            } \n        }\n        function drawEllipse(ctx, x, y, w, h) \n        {\n            var kappa = .5522848,\n              ox = (w / 2) * kappa, // control point offset horizontal\n              oy = (h / 2) * kappa, // control point offset vertical\n              xe = x + w,           // x-end\n              ye = y + h,           // y-end\n              xm = x + w / 2,       // x-middle\n              ym = y + h / 2;       // y-middle\n            \n            ctx.beginPath();\n            ctx.moveTo(x, ym);\n            ctx.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n            ctx.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n            ctx.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n            ctx.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n            //ctx.closePath(); // not used correctly, see comments (use to close off open path)\n            ctx.stroke();\n        }\n",
        "output": "str",
        "x": 630,
        "y": 880,
        "wires": [
            [
                "5673473c.72e0d8"
            ]
        ]
    },
    {
        "id": "fe677dd1.0ed15",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n{{{payload.script.horzbarWidget}}}\n{{{payload.script.editDevice}}}\n",
        "output": "str",
        "x": 620,
        "y": 960,
        "wires": [
            [
                "6540bbf8.883f34"
            ]
        ]
    },
    {
        "id": "e95f9d3f.e2242",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 10px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.display}}}\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 950,
        "y": 920,
        "wires": [
            [
                "a43315f0.373978"
            ]
        ]
    },
    {
        "id": "a43315f0.373978",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #415c71;\n          --color2: #547792;\n          --color3: #9eb5c7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n          background-color: black !important;\n          padding-left:25px;\n          padding-right:25px;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n\n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color: white;\n          padding-top:25px;\n          padding-bottom:25px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n       }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n        }\n        .card-body\n        {\n          background-color: var(--color3);;\n        }\n        .card-button\n        {\n          color: var(--color5) !important;\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .danger-card\n        {\n          background-color: yellow !important;\n          text-align: center;\n        }\n        .danger-card-body\n        {\n          background-color: yellow;\n        }\n        .danger-card-button\n        {\n          color: yellow !important;\n          background-color: red !important;\n          font-weight: bold;\n        }\n        .danger-card-title\n        {\n          color: red;\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .danger-card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .tableHeading\n        {\n          color:var(--container-title-color);\n        }\n        .tableText\n        {\n          color:var(--container-text-color);\n          font-size: var(--big-text-size);\n        }\n       .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n        .ui-slider\n        {\n            height: 90px;\n            background-color: var(--color1) !important;\n        }\n        .ui-slider .ui-slider-handle \n        {\n            height: 100px;\n            width: 100px;\n            background-color: var(--color5) !important;\n        }\n        .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n",
        "output": "str",
        "x": 1130,
        "y": 920,
        "wires": [
            [
                "1aca5409.d5e93c"
            ]
        ]
    },
    {
        "id": "1aca5409.d5e93c",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- navBar -->\n",
        "output": "str",
        "x": 1280,
        "y": 920,
        "wires": [
            [
                "b0e0afdf.1c534"
            ]
        ]
    },
    {
        "id": "d15ddcdf.7826a",
        "type": "function",
        "z": "c4285970.3276d8",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = global.get('deviceNameA')\nmsg.payload['script']['deviceType'] = global.get('deviceTypeA');\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 880,
        "wires": [
            [
                "827198c0.6ed3f8"
            ]
        ]
    },
    {
        "id": "5673473c.72e0d8",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "script.horzbarWidget",
        "field": "payload.script.horzbarWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Horz Bar Widget\n        function setHorzBarWidget(barConfig)\n        {\n            var lowValue = 0;\n            var mediumValue = 0;\n            var highValue = 0;\n        \n            var lowColor = barConfig.backgroundColor;\n            var mediumColor = barConfig.backgroundColor;\n            var highColor = barConfig.backgroundColor;\n            var valueColor = barConfig.backgroundColor; \n            \n            if ( barConfig.value <= barConfig.lolo)\n            {\n                lowValue = barConfig.lolo;\n                lowColor = barConfig.lowColor;\n                valueColor = lowColor;\n            }\n            if ( (barConfig.lolo <= barConfig.value) && (barConfig.value < barConfig.low) )\n            {\n                lowValue = barConfig.value;\n                lowColor = barConfig.lowColor;\n                valueColor = lowColor;\n            }\n            if ( (barConfig.low  <= barConfig.value) && (barConfig.value < barConfig.high) )\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.value - barConfig.low; \n                lowColor = barConfig.mediumColor;\n                mediumColor = barConfig.mediumColor;\n                valueColor = mediumColor;\n        \n            }\n            if ( (barConfig.high <= barConfig.value) && (barConfig.value < barConfig.hihi) )\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.high - barConfig.low;\n                highValue = barConfig.value - barConfig.high;\n                lowColor = barConfig.highColor;\n                mediumColor = barConfig.highColor;\n                highColor = barConfig.highColor;\n                valueColor = highColor;\n            }\n            if ( barConfig.hihi <= barConfig.value)\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.high - barConfig.low; \n                highValue = barConfig.hihi - barConfig.high; \n                lowColor = barConfig.highColor;\n                mediumColor = barConfig.highColor;\n                highColor = barConfig.highColor;\n                valueColor = highColor;\n            }\n            \n            var lowBar = \n            {\n                y: ['', '-'],\n                x: [ barConfig.low, lowValue],\n                type: 'bar',\n                orientation: 'h',\n                showlegend: false,\n                marker:{color: [barConfig.lowColor, lowColor]},\n              width: [0.1, 1.0],\n            };\n            var mediumBar = \n            {\n                y: ['', '-'],\n                x: [barConfig.high - barConfig.low, mediumValue],\n                type: 'bar',\n                orientation: 'h',\n                showlegend: false,\n                marker:{color: [barConfig.mediumColor, mediumColor]},\n              width: [0.1, 1.0],\n            };\n            var highBar = \n            {\n                y: ['', '-'],\n                x: [barConfig.hihi - barConfig.high, highValue],\n                orientation: 'h',\n                type: 'bar',\n                showlegend: false,\n                marker:{color: [barConfig.highColor, highColor]},\n              width: [0.1, 1.0],\n            };\n            var layout = \n                {\n                    barmode: 'stack',\n                    plot_bgcolor:barConfig.backgroundColor,\n                    paper_bgcolor:barConfig.backgroundColor,\n                    margin: \n                        {\n                            t: 60, //top margin\n                            l: 10, //left margin\n                            r: 10, //right margin\n                            b: 30 //bottom margin\n                        },\n \n                    height: barConfig.height,\n                    title: \n                        {\n                            text: barConfig.value.toString() + ' ' + barConfig.unit,\n                            font: {color: valueColor, size:barConfig.textsize * 2}\n//                            font: {color: '#000000', size:10},\n                        },\n                    yaxis: \n                        {\n                            tickfont: {color:valueColor, size:barConfig.textsize}\n                        },\n                    xaxis: \n                        {\n                            range: [barConfig.lolo, barConfig.hihi],\n                            tickfont: {color:barConfig.labelColor, size:barConfig.textsize},\n                            gridcolor       : barConfig.gridColor\n\n                        },\n                };\n           Plotly.newPlot(barConfig.htmlId, [lowBar, mediumBar, highBar], layout, {'displayModeBar': false});\n        }\n",
        "output": "str",
        "x": 660,
        "y": 920,
        "wires": [
            [
                "fe677dd1.0ed15"
            ]
        ]
    },
    {
        "id": "6540bbf8.883f34",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "html.display",
        "field": "payload.html.display",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div align=\"center\" style='padding-top: 1px; width: 100%; overflow-x: hidden;'>\n                    <table width=440px>\n                        <tr>\n                            <td  width=100% align='center'>\n                                <span style='color:magenta;font-size:150%' id='instruction1Id'></span>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td  width=100% align='center'>\n                                <span style='color:yellow;font-size:150%' id='instruction2Id'></span>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td  width=100% align='center'>\n                                <span style='color:yellow;font-size:150%' id='instruction3Id'></span>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td width='100%' align='center' style='padding-bottom: 10px;'>\n                                <div id=\"tempBarPlot\" width='100%' ></div>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td width='90%' align='center'>\n                                <span  class='btn btn-block' style='' id='tempComment'></span>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td width=100%>\n                                <div id=\"wrapper\" width=\"335\" height=\"440\" style=\"text-align: center; padding-top: 10px;\" >\n                                    <canvas id=\"flirCanvas\" width=\"300\" height=\"400\" style=\"border:1px solid #000000;\"></canvas>\n                                </div>\n                            </td>\n                        </tr>\n                    </table>\n                </div>\n",
        "output": "str",
        "x": 970,
        "y": 880,
        "wires": [
            [
                "e95f9d3f.e2242"
            ]
        ]
    },
    {
        "id": "94b1b6c9.79fca8",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Readings Alarm Scan",
        "func": "scalarAlarmScan(msg.payload, 'reading');\nflow.set('lastHeartbeatTime',new Date().getTime());\nflow.set('device',msg.payload)\nreturn msg;\n\nfunction getActionArray(device, type, actionType)\n{\n    var actionArray = [];\n    var keys = Object.keys(device);\n    for (var ii = 0; ii < keys.length; ++ii)\n    {\n        if (device[keys[ii]].hasOwnProperty('type'))\n        {\n            if (device[keys[ii]].type == type)\n            {\n                if (device[keys[ii]].action == actionType)\n                {\n                    actionArray.push(device[keys[ii]]);\n                }\n            }\n        }\n    }\n    return actionArray;\n}\nfunction scalarAlarmScan(device, actionType)\n{\n    var actionArray = getActionArray(device, 'scalar', actionType);\n    if (actionArray.length > 0)\n    {\n        for (var ii = 0; ii < actionArray.length; ++ii)\n        {\n            actionArray[ii].alarm.value = 0;\n            if (!isNaN(actionArray[ii].value))\n            {\n                if (actionArray[ii].value < actionArray[ii].alarm.limits.low)  actionArray[ii].alarm.value = 1;\n                if (actionArray[ii].value < actionArray[ii].alarm.limits.lolo) actionArray[ii].alarm.value = 3;\n                if (actionArray[ii].value > actionArray[ii].alarm.limits.high) actionArray[ii].alarm.value = 2;\n                if (actionArray[ii].value > actionArray[ii].alarm.limits.hihi) actionArray[ii].alarm.value = 4;\n            }\n        }\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1200,
        "y": 640,
        "wires": [
            [
                "2175bcc8.921b04",
                "a3ff8e5.b79de7"
            ]
        ]
    },
    {
        "id": "cf3576c8.424cf8",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Find Face",
        "func": "device = msg.payload;\nvar toppy = global.get('project') + '/' + global.get('deviceTypeA') + '/' + global.get('deviceNameA') + '/reading';\nif (device.triggerMode.value > 1) return {topic:toppy, payload:device};\nif (device.autoModeAction.value == 0) return {topic:toppy, payload:device};\n\ndevice.archiveData.value = 0;\nvar thermalImage = convertByteImageToThermalImage();\n\nvar nrows = thermalImage.length;\nvar ncols = thermalImage[0].length;\nvar horzMidSlice = thermalImage[Math.round(nrows / 2)];\nvar minTemp = horzMidSlice[0];\nvar maxTemp = horzMidSlice[0];\nfor (var icol = 0; icol < ncols; ++icol)\n{\n    if (minTemp > horzMidSlice[icol]) minTemp = horzMidSlice[icol];\n    if (maxTemp < horzMidSlice[icol]) maxTemp = horzMidSlice[icol];\n}\nvar threshold = 0.6 * (maxTemp - minTemp) + minTemp;\n\nvar ileft = 0;\nwhile ((horzMidSlice[ileft] < threshold) && (ileft < (ncols - 1)) ) ileft = ileft + 1;\nvar iright = ncols - 1\nwhile ((horzMidSlice[iright] < threshold) && (iright > 0)) iright = iright - 1;\nif (iright < ileft) return {topic:toppy, payload:device};\n\nvar icenterCol = intAvg(ileft,iright); \nminTemp = thermalImage[0][icenterCol];\nmaxTemp = thermalImage[0][icenterCol];\nfor (var irow = 0; irow < nrows; ++irow)\n{\n    if (minTemp > thermalImage[irow][icenterCol]) minTemp = thermalImage[irow][icenterCol];\n    if (maxTemp < thermalImage[irow][icenterCol]) maxTemp = thermalImage[irow][icenterCol];\n}\nthreshold = 0.6 * (maxTemp - minTemp) + minTemp;\nvar itop = nrows - 1\nwhile ((thermalImage[itop][icenterCol] < threshold) && (itop > 0)) itop = itop - 1;\nif (itop == 0) return {topic:toppy, payload:device};\nvar ibot = Math.round(itop - (iright - ileft) * 1.5)\nif (ibot < 0) ibot = 0;\ndevice.faceLocation.value = [[ibot,ileft],[itop,iright]];\n\nvar icenterRow = intAvg(itop,ibot);\n\nif (ibot   < ((nrows - device.faceRegionHeight.value) / 2) ) device.autoModeAction.value = 0;\nif (itop   > ((nrows + device.faceRegionHeight.value) / 2) ) device.autoModeAction.value = 0;\nif (ileft  < ((ncols - device.faceRegionWidth.value) / 2 ) ) device.autoModeAction.value = 0;\nif (iright > ((ncols + device.faceRegionWidth.value) / 2 ) ) device.autoModeAction.value = 0;\n\nif (device.autoModeAction.value == 0) return {topic:toppy, payload:device};\nvar ifaceWidth = iright - ileft;\nvar ivband = Math.round(ifaceWidth * 0.20)\nvar ihband = Math.round(ifaceWidth * 0.40);\n\nileft = icenterCol - ivband;\niright = icenterCol + ivband;\nibot = icenterRow;\nitop = icenterRow + ihband;\n\nvar maxCol = [0,0];\nvar maxRow = [0,0];\nvar tmax = [0,0];\nvar xdir = [[-1,1],[1,-1]];\nvar xderiv = [[0,0],[0,0]];\nvar ydir = [[-1,1],[-1,1]];\nvar yderiv = [[0,0],[0,0]];\nvar avgRad = [0,0];\nvar colLimits = [[ileft,icenterCol],[icenterCol,iright]];\nfor (var ipt = 0; ipt < 2; ++ipt)\n{\n    for (var irow = ibot; irow <= itop; ++irow)\n    {\n        for (var icol = colLimits[ipt][0]; icol <= colLimits[ipt][1]; ++icol)\n        {\n            if (tmax[ipt] < thermalImage[irow][icol])\n            {\n                tmax[ipt] = thermalImage[irow][icol];\n                maxCol[ipt] = icol;\n                maxRow[ipt] = irow;\n            }\n        }\n    }\n}\ndevice.rawLeftEyeTemp.value  = tmax[0];\ndevice.rawRightEyeTemp.value = tmax[1];\ndevice.eyeLocation.value = [[maxRow[0],maxCol[0]],[maxRow[1],maxCol[1]]];\n\n// Bridge temp\ndevice.rawSpareTemp1.value = thermalImage[intAvg(maxRow[0],maxRow[1])][intAvg(maxCol[0],maxCol[1])];\n// forehead temp\ndevice.rawSpareTemp2.value = thermalImage[intAvg(maxRow[0],maxRow[1]) + maxCol[1]- maxCol[0]][intAvg(maxCol[0],maxCol[1])];\n\ndevice.archiveData.value = 1;\ndevice.bodyTemp.value = intAvg(tmax[0], tmax[1]) * 0.01 + device.offsetTemp.value;\ndevice.bodyTemp.value = Math.round(10 * device.bodyTemp.value) / 10;\nreturn {topic:toppy, payload:device};\n\nfunction intAvg(i1,i2)\n{\n    return Math.round((i1 + i2) / 2);\n}\n\nfunction convertByteImageToThermalImage()\n{\n    var ti = [];\n    \n    var deltat = device.imageData.value.maxval - device.imageData.value.minval;\n    for (var irow = 0; irow < device.imageData.value.nrows; ++irow)\n    {\n        ti[irow] = [];\n        for (var icol = 0; icol < device.imageData.value.ncols; ++icol)\n        {\n            ti[irow][icol] = device.imageData.value.imageArray[irow][icol] / 255.0\n            ti[irow][icol] = deltat * ti[irow][icol]; \n            ti[irow][icol] = Math.round(ti[irow][icol] + device.imageData.value.minval - 27315); \n        }\n    }\n    return ti;\n}\nfunction tempAtPoint(inputImage, irow, icol, kernalType)\n{\n    var nrows = inputImage.length;\n    var ncols = inputImage[0].length;\n    var kernal = [\n        [[ 0,   0,    0  ], [ 0,   1,   0  ], [ 0,   0,    0  ]],\n        [[ 1,   2,    1  ], [ 2,   4,   2  ], [ 1,   2,    1  ]],\n        [[ 0,  -1,    0  ], [-1,   9,  -1  ], [ 0,  -1,    0  ]],\n        ];\n    if( (irow == 0) || (irow == (nrows - 1)) ) return inputImage[irow][icol];\n    if( (icol == 0) || (icol == (ncols - 1)) ) return inputImage[irow][icol];\n    var kernalNormal = [1.0, 16.0, 5];\n    convolveTemp = 0;\n    for (var ikrow = 0; ikrow < 3; ++ikrow)\n    {\n        for (var ikcol = 0; ikcol < 3; ++ikcol)\n        {\n            convolveTemp = convolveTemp + inputImage[irow + ikrow - 1][icol + ikcol - 1] * kernal[kernalType][ikrow][ikcol];\n        }\n    }\n    convolveTemp = convolveTemp / kernalNormal[kernalType];\n    return convolveTemp;\n}\nfunction convolve(inputImage,kernalType)\n{\n    var kernal = [\n        [[ 0,   0,    0  ], [ 0,   1,   0  ], [ 0,   0,    0  ]],\n        [[ 1,   2,    1  ], [ 2,   4,   2  ], [ 1,   2,    1  ]],\n        [[ 0,  -1,    0  ], [-1,   9,  -1  ], [ 0,  -1,    0  ]],\n        [[ 1,   0,   -1  ], [ 2,   0,  -2  ], [ 1,   0,   -1  ]],\n        [[ 1,   2,    1  ], [ 0,   0,   0  ], [-1,  -2,   -1  ]]\n        ];\n    var kernalNormal = [1.0, 16.0, 5, 1, 1];\n    var convolveImage = [];\n    var nrows = inputImage.length;\n    var ncols = inputImage[0].length;\n    for (var irow = 0; irow < nrows; ++irow)\n    {\n        convolveImage[irow] = [];\n        for (var icol = 0; icol < ncols; ++icol)\n        {\n            if ((irow == 0) || (irow == (nrows - 1)))\n            {\n                convolveImage[irow][icol] =  inputImage[irow][icol];\n                if ((kernalType == 3) || (kernalType == 4)) convolveImage[irow][icol]  = 0.0;\n            }\n            else\n            {\n                if ((icol == 0) || (icol == (ncols - 1)))\n                {\n                    convolveImage[irow][icol] =  inputImage[irow][icol];\n                    if ((kernalType == 3) || (kernalType == 4)) convolveImage[irow][icol]  = 0.0;\n                }\n                else\n                {\n                    convolveImage[irow][icol] = 0;\n                    for (var ikrow = 0; ikrow < 3; ++ikrow)\n                    {\n                        for (var ikcol = 0; ikcol < 3; ++ikcol)\n                        {\n                            convolveImage[irow][icol] = convolveImage[irow][icol] + inputImage[irow + ikrow - 1][icol + ikcol - 1] * kernal[kernalType][ikrow][ikcol];\n                        }\n                    }\n                    convolveImage[irow][icol] = convolveImage[irow][icol] / kernalNormal[kernalType];\n                }\n            }\n        }\n    }\n    return convolveImage;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1040,
        "y": 580,
        "wires": [
            [
                "94b1b6c9.79fca8"
            ]
        ]
    },
    {
        "id": "58b8d1f6.bdc9c",
        "type": "serial in",
        "z": "5f562f66.a301e",
        "name": "",
        "serial": "81c09030.dd70d",
        "x": 150,
        "y": 1820,
        "wires": [
            [
                "a179fc1c.4fe37"
            ]
        ]
    },
    {
        "id": "2fe75b8.09b33a4",
        "type": "serial out",
        "z": "5f562f66.a301e",
        "name": "",
        "serial": "81c09030.dd70d",
        "x": 840,
        "y": 1880,
        "wires": []
    },
    {
        "id": "1b0c5934.6f9c97",
        "type": "function",
        "z": "c4285970.3276d8",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = global.get('deviceNameA')\nmsg.payload['script']['deviceType'] = global.get('deviceTypeA');\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 680,
        "wires": [
            [
                "f31911c0.77eb2"
            ]
        ]
    },
    {
        "id": "f31911c0.77eb2",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "thermoYellow.png",
        "output": "str",
        "x": 310,
        "y": 720,
        "wires": [
            [
                "12ff39f6.c10b26"
            ]
        ]
    },
    {
        "id": "12ff39f6.c10b26",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "SbirTem {{{payload.script.name}}}",
        "output": "str",
        "x": 300,
        "y": 760,
        "wires": [
            [
                "319a97e8.f017c8"
            ]
        ]
    },
    {
        "id": "827198c0.6ed3f8",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "SbirTem {{{payload.script.name}}}",
        "output": "str",
        "x": 240,
        "y": 920,
        "wires": [
            [
                "88dd1a6c.d8ae68"
            ]
        ]
    },
    {
        "id": "ba8ea620.747248",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "SbirTem {{{payload.script.name}}}",
        "output": "str",
        "x": 240,
        "y": 480,
        "wires": [
            [
                "4598feb9.0934e"
            ]
        ]
    },
    {
        "id": "4598feb9.0934e",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n        var mqttDevice = null;\n        var device = null;\n        var colorScale = true;\n        var enhancementLevel = 0;\n        var pgm = null;\n        var lastUpdate = new Date().getTime();\n        var maxDisplayTime = 10000;\n        var imageArray =  null;\n        var language = 0;\n        var warnings = [\n            [\"Person outside range\"     ,\"Person utanför räckhåll\"    ,\"Άτομο εκτός εμβέλειας\"   ,\"Persona fuera del alcance\"  ,\"Persona fuori portata\"  ,\"Person außerhalb der Reichweite\"  ,\"Personne hors de portée\"],\n            [\"Normal Temperature\"       ,\"Normal temperatur\"          ,\"Κανονική θερμοκρασία\"    ,\"Temperatura normal\"         ,\"Temperatura normale\"    ,\"Normale Temperatur\"               ,\"Température normale\"],\n            [\"High Temperature\"         ,\"Hög temperatur\"             ,\"Υψηλή θερμοκρασία\"       ,\"Alta temperatura\"           ,\"Alta temperatura\"       ,\"Hohe Temperatur\"                  ,\"Haute température\"],\n            [\"Temperature outside range\",\"Temperatur utanför räckhåll\",\"Θερμοκρασία εκτός εύρους\",\"Temperatura fuera del rango\",\"Temperatura fuori range\",\"Temperatur außerhalb des Bereichs\",\"Température hors plage\"] ];\n        var instructions = [\n            [\"Take off your glasses.\",\"Please stand straight.\",\"Align your face in the circle.\"],\n            [\"Ta av dig dina glasögon.\",\"Vänligen stå rakt.\",\"Rikta in ditt ansikte i cirkeln.\"],\n            [\"Βγάλτε τα γυαλιά σας.\",\"Παρακαλώ σταθείτε ευθεία.\",\"Ευθυγραμμίστε το πρόσωπό σας στον κύκλο.\"],\n            [\"Quítate las gafas.\",\"Por favor, párese derecho.\",\"Alinea tu cara en el círculo.\"],\n            [\"Togliti gli occhiali.\",\"Per favore, stai dritto.\",\"Allinea il tuo viso nel cerchio.\"],\n            [\"Nimm deine Brille ab.\",\"Bitte stehen Sie gerade.\",\"Richten Sie Ihr Gesicht im Kreis aus.\"],\n            [\"Enlève tes lunettes.\",\"Veuillez vous tenir droit.\",\"Alignez votre visage dans le cercle.\"]];      \n\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            $('#tempLegend').hide();\n            $('#tempBarPlot').hide();\n            $('#instruction1Id').hide();\n            $('#instruction2Id').hide();\n            $('#instruction3Id').hide();\n            $('#tempComment').hide();\n            setInterval(function()\n            {\n                if ((new Date().getTime() - lastUpdate) > maxDisplayTime)\n                {\n                    $('#tempComment').hide();\n                    clearImage();\n                    $('#tempLegend').hide();\n                    $('#tempBarPlot').hide();\n                    $('#instruction1Id').hide();\n                    $('#instruction2Id').hide();\n                    $('#instruction3Id').hide();\n                }\n            }, 1000);\n\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            wsConnectC();\n        }\n        function onWebSocketMessage(msg)\n        {\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if (msg.mqttDevice.name == restfulDevice.name)\n                    {\n                        heartbeat();\n                        device = msg.payload;\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                        \n                    }\n                    break;\n                default:\n                // code block\n            }\n        }\n// Update Readings Javascript\n        function updateDmaReadings()\n        {\n            if (device.imageData.value != null)\n            {\n                var style = 'font-size:200%; font-weight:200; color:#ffff00;';\n                if ((device.triggerMode.value == 0) || (device.triggerMode.value == 1))\n                {\n                    $('#instruction1Id').text(instructions[device.language.value][0]);\n                    $('#instruction2Id').text(instructions[device.language.value][1]);\n                    $('#instruction3Id').text(instructions[device.language.value][2]);\n                    $('#instruction1Id').show();\n                    $('#instruction2Id').show();\n                    $('#instruction3Id').show();\n                    $('#tempComment').show();\n\n                    if (device.autoModeAction.value == 0)\n                    {\n                        style = 'font-size:200%; font-weight:200; color:#ff00ff;';\n                         $('#tempComment').attr(\"style\", style);\n                        $('#tempComment').text(warnings[device.autoModeAction.value][device.language.value]);\n                    }\n                    if (device.autoModeAction.value == 1)\n                    {\n                        style = 'font-size:200%; font-weight:200; background-color:#00ff00;color:black;';\n                        $('#tempComment').attr(\"style\", style);\n                        $('#tempComment').text(warnings[device.autoModeAction.value][device.language.value]);\n                    }\n                    if (device.autoModeAction.value == 2)\n                    {\n                        style = 'font-size:200%; font-weight:200; background-color:#ff0000;color:black;';\n                        $('#tempComment').attr(\"style\", style);\n                        $('#tempComment').text(warnings[device.autoModeAction.value][device.language.value]);\n                    }\n                    if (device.autoModeAction.value == 3)\n                    {\n                        style = 'font-size:200%; font-weight:200; color:#ff00ff;';\n                        $('#tempComment').attr(\"style\", style);\n                        $('#tempComment').text(warnings[device.autoModeAction.value][device.language.value]);\n                    }\n                }\n                else\n                {\n                    $('#tempComment').attr(\"style\", style);\n                    $('#tempComment').text(\"Surface Temperature\");\n                }\n                lastUpdate = new Date().getTime();\n            }\n            if (device.imageData.value != null)\n            {\n                pgm = JSON.parse(JSON.stringify(device.imageData.value));\n                imageArray = pgm.imageArray;\n                plotImage();\n                $('#tempBarPlot').show();\n                var tempBarConfig = \n                    {\n                        lolo            : device.bodyTemp.alarm.limits.lolo, \n                        low             : device.bodyTemp.alarm.limits.low, \n                        high            : device.bodyTemp.alarm.limits.high, \n                        hihi            : device.bodyTemp.alarm.limits.hihi, \n                        value           : device.bodyTemp.value, \n                        unit            : device.bodyTemp.unit, \n                        textsize        : 20,\n                        label           : 'temp', \n                        lowColor        : '#0000ff', \n                        mediumColor     : '#00ff00',\n                        highColor       : '#ff0000', \n                        backgroundColor : '#000000', \n                        labelColor      : '#ffffff', \n                        gridColor       : '#000000',\n                        height          : 125, \n                        htmlId          : 'tempBarPlot'\n                    };\n                if (device.autoModeAction.value == 0)\n                {\n                    tempBarConfig.lowColor = '#000000';\n                    tempBarConfig.mediumColor = '#000000';\n                    tempBarConfig.highColor = '#000000';\n                    tempBarConfig.labelColor = '#000000';\n                }\n                setHorzBarWidget(tempBarConfig);\n            }\n        }\n        function plotImage()\n        {\n            $('#tempLegend').show();\n            var rgb = [];\n            var plow = (pgm.minval - 27315) / 100;\n            var phigh = (pgm.maxval - 27315) / 100;\n            var pdelta = phigh - plow;\n            var canvas = document.getElementById(\"flirCanvas\");\n            var canvasContext = canvas.getContext(\"2d\");\n\n            var canvasWidth  = Number($('#flirCanvas').attr('width'));\n            var canvasHeight = Number($('#flirCanvas').attr('height'));\n            var rectWidth  = Math.round(canvasWidth / pgm.ncols);\n            var rectHeight =  Math.round(canvasHeight / pgm.nrows);\n\n            for (var irow = 0; irow < pgm.nrows; ++irow)\n            {\n                for (var icol = 0; icol < pgm.ncols; ++icol)\n                {\n                    var intensity = imageArray[irow][icol] / 256.0;\n                    if (enhancementLevel == -2) intensity = Math.pow(intensity, 1/3.0);\n                    if (enhancementLevel == -1) intensity = Math.pow(intensity, 1/2.0);\n                    if (enhancementLevel ==  0) intensity = Math.pow(intensity, 1);\n                    if (enhancementLevel ==  1) intensity = Math.pow(intensity, 2.0);\n                    if (enhancementLevel ==  2) intensity = Math.pow(intensity, 3.0);\n                    if (colorScale)\n                    {\n                        rgb = getRGB(intensity);\n                        rgb[0] = Math.floor(rgb[0]);\n                        rgb[1] = Math.floor(rgb[1]);\n                        rgb[2] = Math.floor(rgb[2]);\n                    }\n                    else\n                    {\n                        rgb[0] = Math.floor(255 * intensity);\n                        rgb[1] = Math.floor(255 * intensity);\n                        rgb[2] = Math.floor(255 * intensity);\n                    }\n                    canvasContext.fillStyle = 'rgb(' + rgb[0].toString() + ', ' + rgb[1].toString() + ', ' + rgb[2].toString() + ')';\n                    var wx = Math.round(icol * canvasWidth / pgm.ncols);\n                    var hy =  Math.round(canvasHeight - (1 + irow) * canvasHeight / pgm.nrows) ;\n                    canvasContext.fillRect(wx, hy, rectWidth, rectHeight);\n                }    \n            }\n            if ((device.triggerMode.value == 0) || (device.triggerMode.value == 1)) \n            {\n                \n                canvasContext.strokeStyle = 'black';\n                var ellipseWidth =  Math.round(device.faceRegionWidth.value * canvasWidth / pgm.ncols);\n                var ellipseHeight =  Math.round(device.faceRegionHeight.value * canvasHeight / pgm.nrows);\n                \n                drawEllipse(canvasContext, (canvasWidth - ellipseWidth) / 2, (canvasHeight -  ellipseHeight)/ 2, ellipseWidth, ellipseHeight);\n                drawEllipse(canvasContext, (canvasWidth - ellipseWidth - 3) / 2, (canvasHeight -  ellipseHeight - 3)/ 2, ellipseWidth + 3, ellipseHeight + 3);\n                drawEllipse(canvasContext, (canvasWidth - ellipseWidth - 6) / 2, (canvasHeight -  ellipseHeight - 6)/ 2, ellipseWidth + 6, ellipseHeight + 6);\n               \n                canvasContext.strokeStyle = '#00ff00'\n                if (device.autoModeAction.value == 0) canvasContext.strokeStyle = '#ff0000';\n                var faceEllipseWidth  =  device.faceLocation.value[1][1] -  device.faceLocation.value[0][1];\n                var faceEllipseHeight =  device.faceLocation.value[1][0] -  device.faceLocation.value[0][0] ;\n                var faceEllipseCol    = (device.faceLocation.value[1][1] +  device.faceLocation.value[0][1]) / 2 ;\n                var faceEllipseRow    = (device.faceLocation.value[1][0] +  device.faceLocation.value[0][0]) / 2 ;\n                faceEllipseCol = faceEllipseCol - faceEllipseWidth  / 2.0;\n                faceEllipseRow = pgm.nrows - (faceEllipseRow + faceEllipseHeight / 2.0);\n                faceEllipseWidth  = Math.round( faceEllipseWidth  * canvasWidth  / pgm.ncols);\n                faceEllipseHeight = Math.round( faceEllipseHeight * canvasHeight / pgm.nrows);\n                faceEllipseCol    = Math.round( faceEllipseCol    * canvasWidth  / pgm.ncols);\n                faceEllipseRow    = Math.round( faceEllipseRow    * canvasHeight / pgm.nrows);\n                drawEllipse(canvasContext, faceEllipseCol, faceEllipseRow, faceEllipseWidth, faceEllipseHeight);\n\n\n                if (device.autoModeAction.value > 0)\n                {\n                    canvasContext.fillStyle = '#000000';\n                    for (var ipt = 0; ipt < 2; ++ipt)\n                    {\n                        var wx =  Math.round(device.eyeLocation.value[ipt][1] * canvasWidth / pgm.ncols);\n                        var hy =  Math.round(canvasHeight - (1 + device.eyeLocation.value[ipt][0]) * canvasHeight / pgm.nrows) ;\n//                        canvasContext.fillRect(wx - rectWidth, hy - rectHeight, 3 * rectWidth, 3 * rectHeight);\n                        canvasContext.strokeStyle = '#000000'\n                        canvasContext.beginPath();\n                        canvasContext.arc(wx + 0.5 * rectWidth, hy + 0.5 * rectHeight,  rectWidth, 0, 6.2831854);\n                        canvasContext.stroke();\n                    }\n                }\n\n            }\n        }\n        function getRGB(intensity)\n        {\n          var rgb = [0,0,0];\n//plasma\n          var rgbCoeff = [\n              [  48.6, 349.0,    5.72, -172.0],\n              [-164.0, 705.0, -667.0 ,  379.0],\n              [ 135.0, 332.0, -976.0,   536.0]];\n          var intensityStart = [0.0, 0.3176, 0.0];\n//viridis\n/*\n          var rgbCoeff = [\n              [  72.7, 161.0, -928.0,  962.0],\n              [-0.316, 334.0,  -62.8 , -35.3],\n              [  89.3, 296.0, -379.0,  -11.5]];\n          var intensityStart = [0.0, 0.0117, 0.0];\n*/\n//inferno\n/* \n          var rgbCoeff = [\n              [   0,0,  343.0,  264.0, -376.0],\n              [   5.0,  -69.7,  320.0,   -1.1],\n              [   0.0, 1193.0,-2957.0, 1939.0]];\n          var intensityStart = [0.0, 0.0, 0.0];\n*/\n          var power = [1.0, 0.0, 0.0, 0.0];\n          for (var ii = 1; ii < 4; ++ii) power[ii] = power[ii - 1] * intensity;\n          for (var irgb = 0; irgb < 3; ++irgb)\n          {\n              if (intensity >= intensityStart[irgb])\n              {\n                  for (var ipow = 0; ipow < 4; ++ipow)\n                  {\n                      rgb[irgb] = rgb[irgb] + rgbCoeff[irgb][ipow] * power[ipow];\n                  }\n              }\n              if (rgb[irgb] <   0) rgb[irgb] =   0;\n              if (rgb[irgb] > 255) rgb[irgb] = 255;\n         }\n          return rgb;\n        }\n        function getRGBRainBow(intensity)\n        {\n          var rgb = [0,0,0];\n          if ( (0 <= intensity) && (intensity <= 0.25) )\n          {\n            rgb[0] = 0;\n            rgb[1] = Math.floor(255 * intensity * 4);    \n            rgb[2] = 255;\n          }\n          if ( (0.25 < intensity) && (intensity <= 0.50) )\n          {\n            rgb[0] = 0;\n            rgb[1] = 255;    \n            rgb[2] = Math.floor(255 * (0.50 - intensity) * 4);\n          }\n          if ( (0.50 < intensity) && (intensity <= 0.75) )\n          {\n            rgb[0] = Math.floor(255 * (intensity - 0.50) * 4);\n            rgb[1] = 255;    \n            rgb[2] = 0;\n          }\n          if ( (0.75 < intensity) && (intensity <= 1.0) )\n          {\n            rgb[0] = 255;\n            rgb[1] = Math.floor(255 * (1.0 - intensity) * 4);    \n            rgb[2] = 0;\n          }\n          return rgb;\n        }\n        function clearImage()\n        {\n            var canvas = document.getElementById(\"flirCanvas\");\n            var canvasContext = canvas.getContext(\"2d\");\n            var canvasWidth  = Number($('#flirCanvas').attr('width'));\n            var canvasHeight = Number($('#flirCanvas').attr('height'));\n            canvasContext.clearRect(0, 0, canvasWidth, canvasHeight);        \n            for (var ibox = 0; ibox < 9; ++ibox)\n            {\n                var pbox = 0.0;\n                $('#box' + (ibox + 1).toString() + 'Label').text(' ');\n            } \n        }\n        function drawEllipse(ctx, x, y, w, h) \n        {\n            var kappa = .5522848,\n              ox = (w / 2) * kappa, // control point offset horizontal\n              oy = (h / 2) * kappa, // control point offset vertical\n              xe = x + w,           // x-end\n              ye = y + h,           // y-end\n              xm = x + w / 2,       // x-middle\n              ym = y + h / 2;       // y-middle\n            \n            ctx.beginPath();\n            ctx.moveTo(x, ym);\n            ctx.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n            ctx.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n            ctx.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n            ctx.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n            //ctx.closePath(); // not used correctly, see comments (use to close off open path)\n            ctx.stroke();\n        }\n",
        "output": "str",
        "x": 630,
        "y": 440,
        "wires": [
            [
                "247ca540.237eda"
            ]
        ]
    },
    {
        "id": "791f022d.5a15ec",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n{{{payload.script.horzbarWidget}}}\n{{{payload.script.editDevice}}}\n",
        "output": "str",
        "x": 620,
        "y": 520,
        "wires": [
            [
                "7bdc5365.96871c"
            ]
        ]
    },
    {
        "id": "1af64c4d.c866b4",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 10px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.display}}}\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 950,
        "y": 480,
        "wires": [
            [
                "56f6a66a.e8bd48"
            ]
        ]
    },
    {
        "id": "56f6a66a.e8bd48",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #415c71;\n          --color2: #547792;\n          --color3: #9eb5c7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n          background-color: black !important;\n          padding-left:25px;\n          padding-right:25px;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n\n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color: white;\n          padding-top:25px;\n          padding-bottom:25px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n       }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n        }\n        .card-body\n        {\n          background-color: var(--color3);;\n        }\n        .card-button\n        {\n          color: var(--color5) !important;\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .danger-card\n        {\n          background-color: yellow !important;\n          text-align: center;\n        }\n        .danger-card-body\n        {\n          background-color: yellow;\n        }\n        .danger-card-button\n        {\n          color: yellow !important;\n          background-color: red !important;\n          font-weight: bold;\n        }\n        .danger-card-title\n        {\n          color: red;\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .danger-card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .tableHeading\n        {\n          color:var(--container-title-color);\n        }\n        .tableText\n        {\n          color:var(--container-text-color);\n          font-size: var(--big-text-size);\n        }\n       .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n        .ui-slider\n        {\n            height: 90px;\n            background-color: var(--color1) !important;\n        }\n        .ui-slider .ui-slider-handle \n        {\n            height: 100px;\n            width: 100px;\n            background-color: var(--color5) !important;\n        }\n        .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n",
        "output": "str",
        "x": 1130,
        "y": 480,
        "wires": [
            [
                "ed29a342.65b54"
            ]
        ]
    },
    {
        "id": "ed29a342.65b54",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- navBar -->\n",
        "output": "str",
        "x": 1280,
        "y": 480,
        "wires": [
            [
                "c6e267ff.f4aa18"
            ]
        ]
    },
    {
        "id": "247ca540.237eda",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "script.horzbarWidget",
        "field": "payload.script.horzbarWidget",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Horz Bar Widget\n        function setHorzBarWidget(barConfig)\n        {\n            var lowValue = 0;\n            var mediumValue = 0;\n            var highValue = 0;\n        \n            var lowColor = barConfig.backgroundColor;\n            var mediumColor = barConfig.backgroundColor;\n            var highColor = barConfig.backgroundColor;\n            var valueColor = barConfig.backgroundColor; \n            \n            if ( barConfig.value <= barConfig.lolo)\n            {\n                lowValue = barConfig.lolo;\n                lowColor = barConfig.lowColor;\n                valueColor = lowColor;\n            }\n            if ( (barConfig.lolo <= barConfig.value) && (barConfig.value < barConfig.low) )\n            {\n                lowValue = barConfig.value;\n                lowColor = barConfig.lowColor;\n                valueColor = lowColor;\n            }\n            if ( (barConfig.low  <= barConfig.value) && (barConfig.value < barConfig.high) )\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.value - barConfig.low; \n                lowColor = barConfig.mediumColor;\n                mediumColor = barConfig.mediumColor;\n                valueColor = mediumColor;\n        \n            }\n            if ( (barConfig.high <= barConfig.value) && (barConfig.value < barConfig.hihi) )\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.high - barConfig.low;\n                highValue = barConfig.value - barConfig.high;\n                lowColor = barConfig.highColor;\n                mediumColor = barConfig.highColor;\n                highColor = barConfig.highColor;\n                valueColor = highColor;\n            }\n            if ( barConfig.hihi <= barConfig.value)\n            {\n                lowValue = barConfig.low;\n                mediumValue = barConfig.high - barConfig.low; \n                highValue = barConfig.hihi - barConfig.high; \n                lowColor = barConfig.highColor;\n                mediumColor = barConfig.highColor;\n                highColor = barConfig.highColor;\n                valueColor = highColor;\n            }\n            \n            var lowBar = \n            {\n                y: ['', '-'],\n                x: [ barConfig.low, lowValue],\n                type: 'bar',\n                orientation: 'h',\n                showlegend: false,\n                marker:{color: [barConfig.lowColor, lowColor]},\n              width: [0.1, 1.0],\n            };\n            var mediumBar = \n            {\n                y: ['', '-'],\n                x: [barConfig.high - barConfig.low, mediumValue],\n                type: 'bar',\n                orientation: 'h',\n                showlegend: false,\n                marker:{color: [barConfig.mediumColor, mediumColor]},\n              width: [0.1, 1.0],\n            };\n            var highBar = \n            {\n                y: ['', '-'],\n                x: [barConfig.hihi - barConfig.high, highValue],\n                orientation: 'h',\n                type: 'bar',\n                showlegend: false,\n                marker:{color: [barConfig.highColor, highColor]},\n              width: [0.1, 1.0],\n            };\n            var layout = \n                {\n                    barmode: 'stack',\n                    plot_bgcolor:barConfig.backgroundColor,\n                    paper_bgcolor:barConfig.backgroundColor,\n                    margin: \n                        {\n                            t: 60, //top margin\n                            l: 10, //left margin\n                            r: 10, //right margin\n                            b: 30 //bottom margin\n                        },\n \n                    height: barConfig.height,\n                    title: \n                        {\n                            text: barConfig.value.toString() + ' ' + barConfig.unit,\n//                            font: {color: valueColor, size:barConfig.textsize * 2}\n                            font: {color: '#000000', size:10},\n                        },\n                    yaxis: \n                        {\n                            tickfont: {color:valueColor, size:barConfig.textsize}\n                        },\n                    xaxis: \n                        {\n                            range: [barConfig.lolo, barConfig.hihi],\n                            tickfont: {color:barConfig.labelColor, size:barConfig.textsize},\n                            gridcolor       : barConfig.gridColor\n\n                        },\n                };\n           Plotly.newPlot(barConfig.htmlId, [lowBar, mediumBar, highBar], layout, {'displayModeBar': false});\n        }\n",
        "output": "str",
        "x": 660,
        "y": 480,
        "wires": [
            [
                "791f022d.5a15ec"
            ]
        ]
    },
    {
        "id": "7bdc5365.96871c",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "html.display",
        "field": "payload.html.display",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div align=\"center\" style='padding-top: 1px; width: 100%; overflow-x: hidden;'>\n                    <table width=440px>\n                        <tr>\n                            <td  width=100% align='center'>\n                                <span style='color:magenta;font-size:150%' id='instruction1Id'></span>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td  width=100% align='center'>\n                                <span style='color:yellow;font-size:150%' id='instruction2Id'></span>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td  width=100% align='center'>\n                                <span style='color:yellow;font-size:150%' id='instruction3Id'></span>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td width='100%' align='center' style='padding-bottom: 10px;'>\n                                <div id=\"tempBarPlot\" width='100%' ></div>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td width='90%' align='center'>\n                                <span  class='btn btn-block' style='' id='tempComment'></span>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td width=100%>\n                                <div id=\"wrapper\" width=\"335\" height=\"440\" style=\"text-align: center; padding-top: 10px;\" >\n                                    <canvas id=\"flirCanvas\" width=\"300\" height=\"400\" style=\"border:1px solid #000000;\"></canvas>\n                                </div>\n                            </td>\n                        </tr>\n                    </table>\n                </div>\n",
        "output": "str",
        "x": 970,
        "y": 440,
        "wires": [
            [
                "1af64c4d.c866b4"
            ]
        ]
    }
]